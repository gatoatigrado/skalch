// -*- coding: utf-8 -*-
// author: gatoatigrado (nicholas tung) [ntung at ntung]

// Licensed under the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License. You may obtain a
// copy of the License at http://www.apache.org/licenses/LICENSE-2.0 .

// generate unique symbol names with PrintRenamer nodes, which have a counter
// for each symbol.

rule avoidNameConflict(name : PrintName) {
    renamer:PrintRenamer;
    if { renamer.base == name.name; }
    modify {
        eval {
            name.name = name.name + renamer.suffixCtr;
            renamer.suffixCtr = renamer.suffixCtr + 1;
        }
    }
}

rule addRenameNode(name : PrintName) {
    modify {
        renamer:PrintRenamer;
        eval { renamer.base = name.name; }
    }
}

rule setSymbolNames {
    x:Symbol;
    negative { x -:PrintSymName-> .; }
    modify {
        x -:PrintSymName-> name:PrintName;
        eval { name.name = x.symbolName; }
        exec(avoidNameConflict(name) || addRenameNode(name));
    }
}

rule printRandomSymbolName {
    x:Symbol -:PrintSymName-> name:PrintName;
    modify { emit(name.name); }
}

rule deletePrintRenamer {
    x:PrintRenamer;
    modify {
        delete(x);
    }
}
