# grshell script
new graph "AllRules.grg"
import "%(gxl_file)s" ScalaAstModel.gm
select actions lgsp-AllRulesActions.dll



# node colors for printing
# colors:
# Default Black Blue Green Cyan Red Purple Brown Grey LightGrey LightBlue
# LightGreen LightCyan LightRed LightPurple Yellow White DarkBlue DarkRed
# DarkGreen DarkYellow DarkMagenta DarkCyan Gold Lilac
# Aquamarine Khaki Pink Orange Orchid
debug set layout Compilergraph
debug set layout option CREATE_LOOP_TREE false
dump set node ScalaExprStmt color lilac
dump set node MemberFcn color green
dump set node ClassDef color red
dump set node SketchConstructSymbol color gold
dump set node SketchConstructCall color orange
dump set node Symbol color blue
dump set node Annotation color orchid
dump set node TmpSymbol color LightRed
dump set node BlockifyValDef color LightBlue
dump set edge BlockifyLink color LightBlue
dump set node TmpVarRef color LightCyan
dump set node CfgNode color LightGreen
dump set edge CfgAbstractNext color DarkGreen



include "stages-scripts/delete_marked_ignore.grs"
include "stages-scripts/decorate.grs"
include "stages-scripts/convert_this.grs"
include "stages-scripts/clean_sketch_constructs.grs"

# final printing
xgrs deleteDangling*
xgrs (removeNopTypeCast | deleteDangling)*

include "stages-scripts/cstyle_stmts.grs"
# 
# 
# export "%(output_file)s"
%(endstr)s
