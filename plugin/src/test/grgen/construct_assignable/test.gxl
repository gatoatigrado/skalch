<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gxl SYSTEM "http://www.gupro.de/GXL/gxl-1.0.dtd">
<gxl xmlns:xlink="http://www.w3.org/1999/xlink">
	<graph id="SCE_ScalaAstModel">
		<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#gxl-1.0"/>
		<node id="ScalaAstModel">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#GraphClass"/>
			<attr name="name">
				<string>ScalaAstModel</string>
			</attr>
		</node>
		<node id="DM_bool">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#Bool"/>
		</node>
		<node id="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#Int"/>
		</node>
		<node id="DM_float">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#Float"/>
		</node>
		<node id="DM_double">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#Float"/>
		</node>
		<node id="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#String"/>
		</node>
		<node id="NAT_ScAstNode_sourceFile">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>sourceFile</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_sourceFile" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_ScAstNode_scalaSource">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>scalaSource</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_scalaSource" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_ScAstNode_startLine">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>startLine</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_startLine" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_ScAstNode_startCol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>startCol</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_startCol" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_ScAstNode_endLine">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>endLine</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_endLine" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_ScAstNode_endCol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>endCol</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_endCol" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_Symbol_symbolName">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>symbolName</string>
			</attr>
		</node>
		<edge from="NAT_Symbol_symbolName" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_Symbol_fullSymbolName">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>fullSymbolName</string>
			</attr>
		</node>
		<edge from="NAT_Symbol_fullSymbolName" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_BooleanConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>value</string>
			</attr>
		</node>
		<edge from="NAT_BooleanConstant_value" to="DM_bool">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_CharConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>value</string>
			</attr>
		</node>
		<edge from="NAT_CharConstant_value" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_LongConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>value</string>
			</attr>
		</node>
		<edge from="NAT_LongConstant_value" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_IntConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>value</string>
			</attr>
		</node>
		<edge from="NAT_IntConstant_value" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_StringConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>value</string>
			</attr>
		</node>
		<edge from="NAT_StringConstant_value" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Node</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ScAstNode" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Symbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="EmptyChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Annotation" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SKRoot" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SKHelperFcns" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ScAstNode</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScAstNode" to="NAT_ScAstNode_sourceFile">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScAstNode" to="NAT_ScAstNode_scalaSource">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScAstNode" to="NAT_ScAstNode_startLine">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScAstNode" to="NAT_ScAstNode_startCol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScAstNode" to="NAT_ScAstNode_endLine">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScAstNode" to="NAT_ScAstNode_endCol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SketchConstructCall" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SKAssert" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Assign" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Block" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CaseDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="EmptyTree" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCall" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FieldAccess" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="If" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="MemberFcn" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="NewArray" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="PackageDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="QualifiedClassRef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Return" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Template" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="This" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Throw" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Try" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Typed" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ValDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="VarRef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Constant" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="GotoCall" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Bind" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Match" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="LabelDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypeTree" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Symbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="Symbol" to="NAT_Symbol_symbolName">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="Symbol" to="NAT_Symbol_fullSymbolName">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SketchBaseSymbol" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="OuterSymbol" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ScalaSymbol" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="EmptyChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>EmptyChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="EmptyChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Annotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Annotation</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Annotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SketchAnnotation" to="Annotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SketchBaseSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AngelicSketchSymbol" to="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AssertFcnSymbol" to="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BangBangSymbol" to="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="HoleSymbol" to="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="AngelicSketchSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>AngelicSketchSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AngelicSketchSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="AssertFcnSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>AssertFcnSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AssertFcnSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="BangBangSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>BangBangSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BangBangSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="HoleSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>HoleSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="HoleSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SketchConstructCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SketchConstructCall</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SketchConstructCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BangBangCall" to="SketchConstructCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="BangBangCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>BangBangCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BangBangCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SketchAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SketchAnnotation</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SketchAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="StaticSketchAnnotation" to="SketchAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="StaticSketchAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>StaticSketchAnnotation</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="StaticSketchAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="OuterSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>OuterSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="OuterSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="ScalaSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ScalaSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ScalaSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SKRoot">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SKRoot</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SKRoot">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SKHelperFcns">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SKHelperFcns</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SKHelperFcns">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SKAssert">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SKAssert</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SKAssert">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="ConstructAssignableClassDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ConstructAssignableClassDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ConstructAssignableClassDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Assign">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Assign</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Assign">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Block">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Block</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Block">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="CaseDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>CaseDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CaseDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="ClassDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ClassDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ConstructAssignableClassDef" to="ClassDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="EmptyTree">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>EmptyTree</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="EmptyTree">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnCallArrayLength" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryDivide" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryLessThan" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryPrimitiveEquals" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinarySameObj" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinarySubtract" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallTypeApply" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallUnaryNonzero" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnSuperCall" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="NewConstructor" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="StaticFcnCall" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryAdd" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryLogicAnd" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallArrayGet" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryLogicOr" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallUnaryIntCast" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryGreaterThan" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryLessThanOrEqual" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallArraySet" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryPrimitiveNotEquals" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryStringConcat" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryNotSameObj" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="NewArrayCall" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryGreaterThanOrEqual" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="FcnCallArrayLength">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallArrayLength</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallArrayLength">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryDivide">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryDivide</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryDivide">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryLessThan">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryLessThan</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryLessThan">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryPrimitiveEquals">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryPrimitiveEquals</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryPrimitiveEquals">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinarySameObj">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinarySameObj</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinarySameObj">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinarySubtract">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinarySubtract</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinarySubtract">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallTypeApply">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallTypeApply</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallTypeApply">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallUnaryNonzero">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallUnaryNonzero</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallUnaryNonzero">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnSuperCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnSuperCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnSuperCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FieldAccess">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FieldAccess</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FieldAccess">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="If">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>If</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="If">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="MemberFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>MemberFcn</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="MemberFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="NewArray">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>NewArray</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="NewArray">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="NewConstructor">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>NewConstructor</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="NewConstructor">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="PackageDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>PackageDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="PackageDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="QualifiedClassRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>QualifiedClassRef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="QualifiedClassRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Return">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Return</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Return">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="StaticFcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>StaticFcnCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="StaticFcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Template">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Template</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Template">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="This">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>This</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="This">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Throw">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Throw</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Throw">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Try">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Try</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Try">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Typed">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Typed</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Typed">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="ValDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ValDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ValDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="VarRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>VarRef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="VarRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Constant</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BooleanConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CharConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="LongConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IntConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="StringConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="NullTypeConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="UnitConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="BooleanConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>BooleanConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="BooleanConstant" to="NAT_BooleanConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="BooleanConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="CharConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>CharConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="CharConstant" to="NAT_CharConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="CharConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="LongConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>LongConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="LongConstant" to="NAT_LongConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="LongConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="IntConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>IntConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="IntConstant" to="NAT_IntConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="IntConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="StringConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>StringConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="StringConstant" to="NAT_StringConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="StringConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="NullTypeConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>NullTypeConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="NullTypeConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="UnitConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>UnitConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="UnitConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryAdd">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryAdd</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryAdd">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryLogicAnd">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryLogicAnd</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryLogicAnd">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallArrayGet">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallArrayGet</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallArrayGet">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryLogicOr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryLogicOr</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryLogicOr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallUnaryIntCast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallUnaryIntCast</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallUnaryIntCast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryGreaterThan">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryGreaterThan</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryGreaterThan">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryLessThanOrEqual">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryLessThanOrEqual</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryLessThanOrEqual">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallArraySet">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallArraySet</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallArraySet">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryPrimitiveNotEquals">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryPrimitiveNotEquals</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryPrimitiveNotEquals">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="GotoCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>GotoCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="GotoCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryStringConcat">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryStringConcat</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryStringConcat">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryNotSameObj">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryNotSameObj</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryNotSameObj">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Bind">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Bind</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Bind">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="NewArrayCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>NewArrayCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="NewArrayCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Match">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Match</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Match">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="LabelDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>LabelDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="LabelDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryGreaterThanOrEqual">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryGreaterThanOrEqual</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryGreaterThanOrEqual">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="TypeTree">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>TypeTree</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypeTree">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="AEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AEdge</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
			<attr name="isdirected">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="Edge" to="AEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="UEdge" to="AEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AEdge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AEdge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>Edge</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SymbolOwner" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="EnclosingFcn" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BridgeFcn" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BooleanConstructCall" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CanBeConstructAssigned" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CreatePreStmt" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SKAssertExpr" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AnnotationArgsChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AnnotationArgsNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AnnotationSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ArrValueChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ArrValueNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AssignLhs" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AssignRhs" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AssignTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockExpr" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockStmtChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockStmtNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CaseBody" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CaseGuard" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CasePattern" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefFieldSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefImpl" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefTypeParamsChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefTypeParamsNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassRefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassRefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClsMethod" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="EmptyTreeTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnArgChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnArgNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnBody" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallTypeArgsChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDefParamsChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDefParamsNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnTarget" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FieldAccessObject" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IfCond" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IfElse" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IfThen" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IfTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="LabelDefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="LiteralTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="MatchCaseChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="MatchCaseNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="MatchTarget" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="NewClassSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="PackageDefElement" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="PackageDefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="PackageDefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ReturnExpr" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ReturnSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="StaticMember" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SymbolAnnotation" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TemplateElement" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TemplateSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TemplateTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ThisSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ThisTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ThrowExpr" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ThrowTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypedExpression" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypedTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypeTreeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypeTreeTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ValDefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ValDefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ValDefRhs" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="VarRefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="VarRefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Edge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="Edge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="UEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>UEdge</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="UEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="UEdge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="UEdge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="SymbolOwner">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>SymbolOwner</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SymbolOwner">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SymbolOwner" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="SymbolOwner" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="EnclosingFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>EnclosingFcn</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="EnclosingFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="EnclosingFcn" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="EnclosingFcn" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BridgeFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BridgeFcn</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BridgeFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BridgeFcn" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BridgeFcn" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BooleanConstructCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BooleanConstructCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BooleanConstructCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BooleanConstructCall" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BooleanConstructCall" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="CanBeConstructAssigned">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>CanBeConstructAssigned</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CanBeConstructAssigned">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="CanBeConstructAssigned" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="CanBeConstructAssigned" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="CreatePreStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>CreatePreStmt</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CreatePreStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="CreatePreStmt" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="CreatePreStmt" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="SKAssertExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>SKAssertExpr</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SKAssertExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SKAssertExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="SKAssertExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AnnotationArgsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AnnotationArgsChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AnnotationArgsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AnnotationArgsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AnnotationArgsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AnnotationArgsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AnnotationArgsNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AnnotationArgsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AnnotationArgsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AnnotationArgsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AnnotationSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AnnotationSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AnnotationSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AnnotationSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AnnotationSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ArrValueChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ArrValueChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ArrValueChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ArrValueChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ArrValueChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ArrValueNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ArrValueNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ArrValueNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ArrValueNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ArrValueNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AssignLhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AssignLhs</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AssignLhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AssignLhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AssignLhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AssignRhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AssignRhs</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AssignRhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AssignRhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AssignRhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AssignTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AssignTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AssignTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AssignTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AssignTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockExpr</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockStmtChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockStmtChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockStmtChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockStmtChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockStmtChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockStmtNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockStmtNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockStmtNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockStmtNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockStmtNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="CaseBody">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>CaseBody</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CaseBody">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="CaseBody" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="CaseBody" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="CaseGuard">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>CaseGuard</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CaseGuard">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="CaseGuard" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="CaseGuard" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="CasePattern">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>CasePattern</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CasePattern">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="CasePattern" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="CasePattern" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefFieldSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefFieldSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefFieldSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefFieldSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefFieldSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefImpl">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefImpl</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefImpl">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefImpl" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefImpl" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefTypeParamsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefTypeParamsChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefTypeParamsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefTypeParamsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefTypeParamsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefTypeParamsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefTypeParamsNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefTypeParamsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefTypeParamsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefTypeParamsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassRefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassRefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassRefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassRefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassRefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassRefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassRefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassRefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassRefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassRefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClsMethod">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClsMethod</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClsMethod">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClsMethod" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClsMethod" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="EmptyTreeTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>EmptyTreeTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="EmptyTreeTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="EmptyTreeTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="EmptyTreeTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnArgChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnArgChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnArgChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnArgChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnArgChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnArgNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnArgNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnArgNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnArgNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnArgNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnBody">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnBody</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnBody">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnBody" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnBody" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnCallSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnCallSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnCallSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnCallSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnCallTypeArgsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnCallTypeArgsChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallTypeArgsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnCallTypeArgsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnCallTypeArgsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnCallTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnCallTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnCallTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnCallTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnDefParamsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnDefParamsChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDefParamsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnDefParamsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnDefParamsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnDefParamsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnDefParamsNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDefParamsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnDefParamsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnDefParamsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnDefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnDefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnTarget">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnTarget</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnTarget">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnTarget" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnTarget" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FieldAccessObject">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FieldAccessObject</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FieldAccessObject">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FieldAccessObject" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FieldAccessObject" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="IfCond">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>IfCond</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="IfCond">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="IfCond" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="IfCond" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="IfElse">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>IfElse</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="IfElse">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="IfElse" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="IfElse" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="IfThen">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>IfThen</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="IfThen">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="IfThen" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="IfThen" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="IfTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>IfTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="IfTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="IfTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="IfTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="LabelDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>LabelDefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="LabelDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="LabelDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="LabelDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="LiteralTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>LiteralTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="LiteralTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="LiteralTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="LiteralTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="MatchCaseChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>MatchCaseChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="MatchCaseChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="MatchCaseChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="MatchCaseChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="MatchCaseNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>MatchCaseNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="MatchCaseNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="MatchCaseNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="MatchCaseNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="MatchTarget">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>MatchTarget</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="MatchTarget">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="MatchTarget" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="MatchTarget" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="NewClassSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>NewClassSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="NewClassSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="NewClassSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="NewClassSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="PackageDefElement">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>PackageDefElement</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="PackageDefElement">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="PackageDefElement" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="PackageDefElement" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="PackageDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>PackageDefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="PackageDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="PackageDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="PackageDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="PackageDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>PackageDefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="PackageDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="PackageDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="PackageDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ReturnExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ReturnExpr</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ReturnExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ReturnExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ReturnExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ReturnSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ReturnSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ReturnSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ReturnSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ReturnSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="StaticMember">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>StaticMember</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="StaticMember">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="StaticMember" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="StaticMember" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="SymbolAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>SymbolAnnotation</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SymbolAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SymbolAnnotation" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="SymbolAnnotation" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TemplateElement">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TemplateElement</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TemplateElement">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TemplateElement" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TemplateElement" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TemplateSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TemplateSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TemplateSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TemplateSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TemplateSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TemplateTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TemplateTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TemplateTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TemplateTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TemplateTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ThisSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ThisSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ThisSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ThisSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ThisSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ThisTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ThisTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ThisTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ThisTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ThisTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ThrowExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ThrowExpr</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ThrowExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ThrowExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ThrowExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ThrowTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ThrowTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ThrowTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ThrowTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ThrowTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TypedExpression">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TypedExpression</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypedExpression">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TypedExpression" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TypedExpression" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TypedTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TypedTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypedTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TypedTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TypedTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TypeTreeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TypeTreeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypeTreeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TypeTreeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TypeTreeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TypeTreeTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TypeTreeTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypeTreeTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TypeTreeTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TypeTreeTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ValDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ValDefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ValDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ValDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ValDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ValDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ValDefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ValDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ValDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ValDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ValDefRhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ValDefRhs</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ValDefRhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ValDefRhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ValDefRhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="VarRefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>VarRefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="VarRefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="VarRefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="VarRefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="VarRefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>VarRefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="VarRefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="VarRefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="VarRefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup>
					<int>0</int>
					<int>-1</int>
				</tup>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
	</graph>
	<graph edgeids="true" edgemode="defaultdirected" id="DefaultGraph">
		<type xlink:href="#ScalaAstModel"/>
		<node id="line_1_33">
			<type xlink:href="#PackageDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>1</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>1</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>package angelic.simple {
  class MySketch extends skalch.AngelicSketch with ScalaObject {
    def main(): Unit = {
      val v2: angelic.simple.MySketch$MyValue = (MySketch.this.resolve(MySketch.this.!!()).$asInstanceOf[angelic.simple.MySketch$MyValue](): angelic.simple.MySketch$MyValue);
      if (scala.Boolean.unbox(MySketch.this.resolve(MySketch.this.!!())))
        MySketch.this.synthAssert(v2.a().==(4))
      else
        ()
    };
    def this(): angelic.simple.MySketch = {
      MySketch.super.this();
      ()
    }
  };
  class MySketch$MyValue extends java.lang.Object with ScalaObject {
    &lt;paramaccessor&gt; private[this] val a: Int = _;
    &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def a(): Int = MySketch$MyValue.this.a;
    &lt;paramaccessor&gt; private[this] val c: Int = _;
    &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def c(): Int = MySketch$MyValue.this.c;
    protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
    &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$MyValue$$$outer(): angelic.simple.MySketch = MySketch$MyValue.this.$outer;
    def this($outer: angelic.simple.MySketch, a: Int, c: Int): angelic.simple.MySketch$MyValue = {
      MySketch$MyValue.this.a = a;
      MySketch$MyValue.this.c = c;
      if ($outer.eq(null))
        throw new java.lang.NullPointerException()
      else
        MySketch$MyValue.this.$outer = $outer;
      MySketch$MyValue.super.this();
      ()
    }
  };
  class MySketch$DontAssign extends java.lang.Object with ScalaObject {
    &lt;paramaccessor&gt; private[this] val c: Int = _;
    &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def c(): Int = MySketch$DontAssign.this.c;
    protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
    &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$DontAssign$$$outer(): angelic.simple.MySketch = MySketch$DontAssign.this.$outer;
    def this($outer: angelic.simple.MySketch, c: Int): angelic.simple.MySketch$DontAssign = {
      MySketch$DontAssign.this.c = c;
      if ($outer.eq(null))
        throw new java.lang.NullPointerException()
      else
        MySketch$DontAssign.this.$outer = $outer;
      MySketch$DontAssign.super.this();
      ()
    }
  };
  class MySketch$DontAssign2 extends java.lang.Object with ScalaObject {
    &lt;paramaccessor&gt; private[this] val mv: angelic.simple.MySketch$DontAssign = _;
    &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def mv(): angelic.simple.MySketch$DontAssign = MySketch$DontAssign2.this.mv;
    protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
    &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$DontAssign2$$$outer(): angelic.simple.MySketch = MySketch$DontAssign2.this.$outer;
    def this($outer: angelic.simple.MySketch, mv: angelic.simple.MySketch$DontAssign): angelic.simple.MySketch$DontAssign2 = {
      MySketch$DontAssign2.this.mv = mv;
      if ($outer.eq(null))
        throw new java.lang.NullPointerException()
      else
        MySketch$DontAssign2.this.$outer = $outer;
      MySketch$DontAssign2.super.this();
      ()
    }
  };
  class MySketch$MyValue2 extends java.lang.Object with ScalaObject {
    &lt;paramaccessor&gt; private[this] val mv: angelic.simple.MySketch$MyValue = _;
    &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def mv(): angelic.simple.MySketch$MyValue = MySketch$MyValue2.this.mv;
    protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
    &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$MyValue2$$$outer(): angelic.simple.MySketch = MySketch$MyValue2.this.$outer;
    def this($outer: angelic.simple.MySketch, mv: angelic.simple.MySketch$MyValue): angelic.simple.MySketch$MyValue2 = {
      MySketch$MyValue2.this.mv = mv;
      if ($outer.eq(null))
        throw new java.lang.NullPointerException()
      else
        MySketch$MyValue2.this.$outer = $outer;
      MySketch$MyValue2.super.this();
      ()
    }
  }
}</string>
			</attr>
		</node>
		<node id="symbol_simple_34">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>simple</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple</string>
			</attr>
		</node>
		<node id="symbol_simple_35">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>simple</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple</string>
			</attr>
		</node>
		<edge from="symbol_simple_35" to="symbol_simple_35">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_angelic_36">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>angelic</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic</string>
			</attr>
		</node>
		<edge from="symbol_angelic_36" to="symbol_angelic_36">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_&lt;root&gt;_4">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;root&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>package &lt;root&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;root&gt;_4" to="symbol_&lt;root&gt;_4">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_&lt;none&gt;_5">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;none&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>&lt;none&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;root&gt;_4" to="symbol_&lt;none&gt;_5">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_skalch_3">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>skalch</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch</string>
			</attr>
		</node>
		<edge from="symbol_skalch_3" to="symbol_skalch_3">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_AngelicSketch$Range_2">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>AngelicSketch$Range</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch$Range</string>
			</attr>
		</node>
		<edge from="symbol_AngelicSketch$Range_2" to="symbol_AngelicSketch$Range_2">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="annot_1">
			<type xlink:href="#Annotation"/>
		</node>
		<node id="line_8_6">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>41</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>41</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.this.Predef.intWrapper(3).to(444)</string>
			</attr>
		</node>
		<node id="symbol_to_7">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>to</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.runtime.RichInt.to</string>
			</attr>
		</node>
		<node id="symbol_RichInt_8">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>RichInt</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.runtime.RichInt</string>
			</attr>
		</node>
		<edge from="symbol_RichInt_8" to="symbol_RichInt_8">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_runtime_9">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>runtime</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.runtime</string>
			</attr>
		</node>
		<edge from="symbol_runtime_9" to="symbol_runtime_9">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_scala_10">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>scala</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala</string>
			</attr>
		</node>
		<edge from="symbol_scala_10" to="symbol_scala_10">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_scala_10" to="symbol_&lt;root&gt;_4">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_Int_13">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Int</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Int</string>
			</attr>
		</node>
		<edge from="symbol_Int_13" to="symbol_Int_13">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="line_8_12">
			<type xlink:href="#IntConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>44</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>44</int>
			</attr>
			<attr name="scalaSource">
				<string>444</string>
			</attr>
			<attr name="value">
				<int>444</int>
			</attr>
		</node>
		<edge from="line_8_6" to="line_8_12">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_8_12" to="symbol_Int_13">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<node id="line_8_17">
			<type xlink:href="#IntConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>39</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>39</int>
			</attr>
			<attr name="scalaSource">
				<string>3</string>
			</attr>
			<attr name="value">
				<int>3</int>
			</attr>
		</node>
		<node id="line_8_14">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>39</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>39</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.this.Predef.intWrapper(3)</string>
			</attr>
		</node>
		<node id="symbol_intWrapper_15">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>intWrapper</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Predef.intWrapper</string>
			</attr>
		</node>
		<node id="symbol_Predef_16">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Predef</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Predef</string>
			</attr>
		</node>
		<edge from="symbol_Predef_16" to="symbol_Predef_16">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_Predef_16" to="symbol_scala_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_Predef_19">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Predef</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Predef</string>
			</attr>
		</node>
		<edge from="symbol_Predef_19" to="symbol_scala_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_8_18">
			<type xlink:href="#QualifiedClassRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>39</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>39</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.this.Predef</string>
			</attr>
		</node>
		<edge from="line_8_18" to="symbol_Predef_16">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<edge from="line_8_14" to="line_8_18">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_8_18" to="symbol_Predef_19">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="symbol_Predef_19" to="symbol_Predef_16">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_intWrapper_15" to="symbol_Predef_16">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_intWrapper_15" to="symbol_intWrapper_15">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_8_14" to="symbol_intWrapper_15">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_8_14" to="symbol_RichInt_8">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_8_6" to="line_8_14">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_8_14" to="line_8_17">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_8_17" to="symbol_Int_13">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<node id="line_9_27">
			<type xlink:href="#IntConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>34</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>34</int>
			</attr>
			<attr name="scalaSource">
				<string>3</string>
			</attr>
			<attr name="value">
				<int>3</int>
			</attr>
		</node>
		<node id="line_9_21">
			<type xlink:href="#FcnCallTypeApply"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>33</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>33</int>
			</attr>
			<attr name="scalaSource">
				<string>immutable.this.List.apply[Int](3, 5)</string>
			</attr>
		</node>
		<node id="symbol_apply_22">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>apply</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.collection.immutable.List.apply</string>
			</attr>
		</node>
		<node id="symbol_List_23">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>List</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.collection.immutable.List</string>
			</attr>
		</node>
		<edge from="symbol_List_23" to="symbol_List_23">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_immutable_24">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>immutable</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.collection.immutable</string>
			</attr>
		</node>
		<edge from="symbol_immutable_24" to="symbol_immutable_24">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_collection_25">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>collection</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.collection</string>
			</attr>
		</node>
		<edge from="symbol_collection_25" to="symbol_collection_25">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_collection_25" to="symbol_scala_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_immutable_24" to="symbol_collection_25">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_List_26">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>List</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.collection.immutable.List</string>
			</attr>
		</node>
		<edge from="symbol_List_26" to="symbol_List_26">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="line_9_21" to="symbol_List_26">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="symbol_List_26" to="symbol_immutable_24">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_List_31">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>List</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.collection.immutable.List</string>
			</attr>
		</node>
		<edge from="symbol_List_31" to="symbol_List_23">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="line_9_30">
			<type xlink:href="#QualifiedClassRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>29</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>29</int>
			</attr>
			<attr name="scalaSource">
				<string>immutable.this.List</string>
			</attr>
		</node>
		<edge from="line_9_30" to="symbol_List_23">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_9_29">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>29</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>29</int>
			</attr>
			<attr name="scalaSource">
				<string>immutable.this.List.apply</string>
			</attr>
		</node>
		<edge from="line_9_29" to="symbol_apply_22">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_9_21" to="line_9_29">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_9_29" to="line_9_30">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<edge from="line_9_30" to="symbol_List_31">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="symbol_List_31" to="symbol_immutable_24">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_List_23" to="symbol_immutable_24">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_apply_22" to="symbol_List_23">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_apply_22" to="symbol_apply_22">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_9_21" to="symbol_apply_22">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="line_9_32">
			<type xlink:href="#TypeTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>29</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>29</int>
			</attr>
			<attr name="scalaSource">
				<string>Int</string>
			</attr>
		</node>
		<edge from="line_9_32" to="symbol_Int_13">
			<type xlink:href="#TypeTreeSymbol"/>
		</edge>
		<edge from="line_9_32" to="symbol_Int_13">
			<type xlink:href="#TypeTreeTypeSymbol"/>
		</edge>
		<edge from="line_9_21" to="line_9_32">
			<type xlink:href="#FcnCallTypeArgsChain"/>
		</edge>
		<node id="annot_20">
			<type xlink:href="#Annotation"/>
		</node>
		<edge from="annot_20" to="symbol_AngelicSketch$Range_2">
			<type xlink:href="#AnnotationSymbol"/>
		</edge>
		<node id="symbol_c _111">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>c</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.c</string>
			</attr>
		</node>
		<edge from="symbol_c _111" to="symbol_Int_13">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_MySketch$MyValue_48">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>MySketch$MyValue</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue</string>
			</attr>
		</node>
		<edge from="symbol_MySketch$MyValue_48" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_MySketch$MyValue_48" to="symbol_simple_35">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_v2_47">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>v2</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.v2</string>
			</attr>
		</node>
		<node id="symbol_main_43">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>main</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.main</string>
			</attr>
		</node>
		<node id="symbol_MySketch_38">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>MySketch</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch</string>
			</attr>
		</node>
		<edge from="symbol_MySketch_38" to="symbol_MySketch_38">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_MySketch_38" to="symbol_simple_35">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_7_37">
			<type xlink:href="#ClassDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>7</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>7</int>
			</attr>
			<attr name="scalaSource">
				<string>class MySketch extends skalch.AngelicSketch with ScalaObject {
  def main(): Unit = {
    val v2: angelic.simple.MySketch$MyValue = (MySketch.this.resolve(MySketch.this.!!()).$asInstanceOf[angelic.simple.MySketch$MyValue](): angelic.simple.MySketch$MyValue);
    if (scala.Boolean.unbox(MySketch.this.resolve(MySketch.this.!!())))
      MySketch.this.synthAssert(v2.a().==(4))
    else
      ()
  };
  def this(): angelic.simple.MySketch = {
    MySketch.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="empty_chain_39">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_7_37" to="empty_chain_39">
			<type xlink:href="#ClassDefTypeParamsChain"/>
		</edge>
		<node id="line_7_40">
			<type xlink:href="#Template"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>skalch.AngelicSketch with ScalaObject {
  def main(): Unit = {
    val v2: angelic.simple.MySketch$MyValue = (MySketch.this.resolve(MySketch.this.!!()).$asInstanceOf[angelic.simple.MySketch$MyValue](): angelic.simple.MySketch$MyValue);
    if (scala.Boolean.unbox(MySketch.this.resolve(MySketch.this.!!())))
      MySketch.this.synthAssert(v2.a().==(4))
    else
      ()
  };
  def this(): angelic.simple.MySketch = {
    MySketch.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="symbol_&lt;local MySketch&gt;_41">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;local MySketch&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.&lt;local MySketch&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;local MySketch&gt;_41" to="symbol_MySketch_38">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_7_40" to="symbol_&lt;local MySketch&gt;_41">
			<type xlink:href="#TemplateSymbol"/>
		</edge>
		<edge from="line_7_40" to="symbol_MySketch_38">
			<type xlink:href="#TemplateTypeSymbol"/>
		</edge>
		<node id="line_14_42">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>14</int>
			</attr>
			<attr name="startCol">
				<int>9</int>
			</attr>
			<attr name="endLine">
				<int>14</int>
			</attr>
			<attr name="endCol">
				<int>9</int>
			</attr>
			<attr name="scalaSource">
				<string>def main(): Unit = {
  val v2: angelic.simple.MySketch$MyValue = (MySketch.this.resolve(MySketch.this.!!()).$asInstanceOf[angelic.simple.MySketch$MyValue](): angelic.simple.MySketch$MyValue);
  if (scala.Boolean.unbox(MySketch.this.resolve(MySketch.this.!!())))
    MySketch.this.synthAssert(v2.a().==(4))
  else
    ()
}</string>
			</attr>
		</node>
		<edge from="line_14_42" to="symbol_main_43">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="line_14_44">
			<type xlink:href="#Block"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>14</int>
			</attr>
			<attr name="startCol">
				<int>16</int>
			</attr>
			<attr name="endLine">
				<int>14</int>
			</attr>
			<attr name="endCol">
				<int>16</int>
			</attr>
			<attr name="scalaSource">
				<string>{
  val v2: angelic.simple.MySketch$MyValue = (MySketch.this.resolve(MySketch.this.!!()).$asInstanceOf[angelic.simple.MySketch$MyValue](): angelic.simple.MySketch$MyValue);
  if (scala.Boolean.unbox(MySketch.this.resolve(MySketch.this.!!())))
    MySketch.this.synthAssert(v2.a().==(4))
  else
    ()
}</string>
			</attr>
		</node>
		<node id="symbol_Unit_45">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Unit</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Unit</string>
			</attr>
		</node>
		<edge from="symbol_Unit_45" to="symbol_Unit_45">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_Unit_45" to="symbol_scala_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_16_67">
			<type xlink:href="#If"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>9</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>9</int>
			</attr>
			<attr name="scalaSource">
				<string>if (scala.Boolean.unbox(MySketch.this.resolve(MySketch.this.!!())))
  MySketch.this.synthAssert(v2.a().==(4))
else
  ()</string>
			</attr>
		</node>
		<node id="line_16_68">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Boolean.unbox(MySketch.this.resolve(MySketch.this.!!()))</string>
			</attr>
		</node>
		<node id="symbol_unbox_69">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>unbox</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Boolean.unbox</string>
			</attr>
		</node>
		<node id="symbol_Boolean_70">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Boolean</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="symbol_Boolean_70" to="symbol_Boolean_70">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_Boolean_70" to="symbol_scala_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_Boolean_78">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Boolean</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="symbol_Boolean_78" to="symbol_scala_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_16_77">
			<type xlink:href="#QualifiedClassRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="line_16_77" to="symbol_Boolean_70">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<edge from="line_16_68" to="line_16_77">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_16_77" to="symbol_Boolean_78">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="symbol_Boolean_78" to="symbol_Boolean_70">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_unbox_69" to="symbol_Boolean_70">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_unbox_69" to="symbol_unbox_69">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_16_68" to="symbol_unbox_69">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="symbol_Boolean_71">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Boolean</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="symbol_Boolean_71" to="symbol_Boolean_71">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_Boolean_71" to="symbol_scala_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_16_81">
			<type xlink:href="#FcnCallBinaryPrimitiveEquals"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>34</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>34</int>
			</attr>
			<attr name="scalaSource">
				<string>v2.a().==(4)</string>
			</attr>
		</node>
		<node id="symbol_$eq$eq_82">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$eq$eq</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Int.$eq$eq</string>
			</attr>
		</node>
		<edge from="symbol_$eq$eq_82" to="symbol_Int_13">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_$eq$eq_82" to="symbol_$eq$eq_82">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_16_81" to="symbol_$eq$eq_82">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="line_16_83">
			<type xlink:href="#IntConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>37</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>37</int>
			</attr>
			<attr name="scalaSource">
				<string>4</string>
			</attr>
			<attr name="value">
				<int>4</int>
			</attr>
		</node>
		<edge from="line_16_83" to="symbol_Int_13">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_16_81" to="line_16_83">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_16_84">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>32</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>32</int>
			</attr>
			<attr name="scalaSource">
				<string>v2.a()</string>
			</attr>
		</node>
		<node id="symbol_a_85">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>a</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.a</string>
			</attr>
		</node>
		<edge from="symbol_a_85" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_a_85" to="symbol_a_85">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="symbol_a_85" to="annot_1">
			<type xlink:href="#SymbolAnnotation"/>
		</edge>
		<node id="line_8_106">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def a(): Int = MySketch$MyValue.this.a</string>
			</attr>
		</node>
		<node id="line_8_107">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this.a</string>
			</attr>
		</node>
		<node id="symbol_a _104">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>a</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.a</string>
			</attr>
		</node>
		<edge from="symbol_a _104" to="symbol_Int_13">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_a _104" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_a _104" to="annot_1">
			<type xlink:href="#SymbolAnnotation"/>
		</edge>
		<node id="line_8_103">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;paramaccessor&gt; private[this] val a: Int = _</string>
			</attr>
		</node>
		<node id="line_0_105">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_8_103" to="line_0_105">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<node id="line_8_101">
			<type xlink:href="#Template"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>java.lang.Object with ScalaObject {
  &lt;paramaccessor&gt; private[this] val a: Int = _;
  &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def a(): Int = MySketch$MyValue.this.a;
  &lt;paramaccessor&gt; private[this] val c: Int = _;
  &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def c(): Int = MySketch$MyValue.this.c;
  protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
  &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$MyValue$$$outer(): angelic.simple.MySketch = MySketch$MyValue.this.$outer;
  def this($outer: angelic.simple.MySketch, a: Int, c: Int): angelic.simple.MySketch$MyValue = {
    MySketch$MyValue.this.a = a;
    MySketch$MyValue.this.c = c;
    if ($outer.eq(null))
      throw new java.lang.NullPointerException()
    else
      MySketch$MyValue.this.$outer = $outer;
    MySketch$MyValue.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="symbol_&lt;local MyValue&gt;_102">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;local MyValue&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.&lt;local MyValue&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;local MyValue&gt;_102" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_8_101" to="symbol_&lt;local MyValue&gt;_102">
			<type xlink:href="#TemplateSymbol"/>
		</edge>
		<edge from="line_8_101" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#TemplateTypeSymbol"/>
		</edge>
		<edge from="line_8_101" to="line_8_106">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<node id="line_9_110">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;paramaccessor&gt; private[this] val c: Int = _</string>
			</attr>
		</node>
		<edge from="line_9_110" to="symbol_c _111">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_112">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_9_110" to="line_0_112">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_8_101" to="line_9_110">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<node id="line_9_113">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def c(): Int = MySketch$MyValue.this.c</string>
			</attr>
		</node>
		<node id="symbol_c_114">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>c</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.c</string>
			</attr>
		</node>
		<edge from="symbol_c_114" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_c_114" to="symbol_c_114">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="symbol_c_114" to="annot_20">
			<type xlink:href="#SymbolAnnotation"/>
		</edge>
		<edge from="line_9_113" to="symbol_c_114">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="line_9_115">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this.c</string>
			</attr>
		</node>
		<edge from="line_9_115" to="symbol_c _111">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_9_115" to="symbol_Int_13">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_9_116">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this</string>
			</attr>
		</node>
		<edge from="line_9_116" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_9_116" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_9_115" to="line_9_116">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<edge from="line_9_113" to="line_9_115">
			<type xlink:href="#FcnBody"/>
		</edge>
		<node id="empty_chain_117">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_9_113" to="empty_chain_117">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_8_101" to="line_9_113">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<node id="line_8_118">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _</string>
			</attr>
		</node>
		<node id="symbol_$outer _119">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.$outer</string>
			</attr>
		</node>
		<edge from="symbol_$outer _119" to="symbol_MySketch_38">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_$outer _119" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_8_123">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this.$outer</string>
			</attr>
		</node>
		<edge from="line_8_123" to="symbol_MySketch_38">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_8_124">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this</string>
			</attr>
		</node>
		<edge from="line_8_124" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_8_124" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_8_123" to="line_8_124">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_8_121">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$MyValue$$$outer(): angelic.simple.MySketch = MySketch$MyValue.this.$outer</string>
			</attr>
		</node>
		<node id="symbol_angelic$simple$MySketch$MyValue$$$outer_122">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>angelic$simple$MySketch$MyValue$$$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.angelic$simple$MySketch$MyValue$$$outer</string>
			</attr>
		</node>
		<edge from="symbol_angelic$simple$MySketch$MyValue$$$outer_122" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_angelic$simple$MySketch$MyValue$$$outer_122" to="symbol_angelic$simple$MySketch$MyValue$$$outer_122">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_8_121" to="symbol_angelic$simple$MySketch$MyValue$$$outer_122">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="empty_chain_125">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_8_121" to="empty_chain_125">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_8_101" to="line_8_121">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_8_121" to="line_8_123">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_8_123" to="symbol_$outer _119">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<node id="line_8_152">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this.$outer</string>
			</attr>
		</node>
		<edge from="line_8_152" to="symbol_MySketch_38">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_8_153">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this</string>
			</attr>
		</node>
		<edge from="line_8_153" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_8_153" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_8_152" to="line_8_153">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_8_151">
			<type xlink:href="#Assign"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this.$outer = $outer</string>
			</attr>
		</node>
		<edge from="line_8_151" to="symbol_Unit_45">
			<type xlink:href="#AssignTypeSymbol"/>
		</edge>
		<node id="line_8_154">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer</string>
			</attr>
		</node>
		<node id="symbol_$outer_144">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.$outer</string>
			</attr>
		</node>
		<edge from="symbol_$outer_144" to="symbol_MySketch_38">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_&lt;init&gt;_127">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.&lt;init&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;init&gt;_127" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_127" to="symbol_&lt;init&gt;_127">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_8_126">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>def this($outer: angelic.simple.MySketch, a: Int, c: Int): angelic.simple.MySketch$MyValue = {
  MySketch$MyValue.this.a = a;
  MySketch$MyValue.this.c = c;
  if ($outer.eq(null))
    throw new java.lang.NullPointerException()
  else
    MySketch$MyValue.this.$outer = $outer;
  MySketch$MyValue.super.this();
  ()
}</string>
			</attr>
		</node>
		<node id="line_8_128">
			<type xlink:href="#Block"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>{
  MySketch$MyValue.this.a = a;
  MySketch$MyValue.this.c = c;
  if ($outer.eq(null))
    throw new java.lang.NullPointerException()
  else
    MySketch$MyValue.this.$outer = $outer;
  MySketch$MyValue.super.this();
  ()
}</string>
			</attr>
		</node>
		<edge from="line_8_128" to="symbol_Unit_45">
			<type xlink:href="#BlockTypeSymbol"/>
		</edge>
		<node id="line_8_129">
			<type xlink:href="#Assign"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this.a = a</string>
			</attr>
		</node>
		<edge from="line_8_129" to="symbol_Unit_45">
			<type xlink:href="#AssignTypeSymbol"/>
		</edge>
		<node id="line_8_130">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this.a</string>
			</attr>
		</node>
		<edge from="line_8_130" to="symbol_a _104">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_8_130" to="symbol_Int_13">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_8_131">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this</string>
			</attr>
		</node>
		<edge from="line_8_131" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_8_131" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_8_130" to="line_8_131">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<edge from="line_8_129" to="line_8_130">
			<type xlink:href="#AssignLhs"/>
		</edge>
		<node id="line_8_132">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>a</string>
			</attr>
		</node>
		<node id="symbol_a_133">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>a</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.a</string>
			</attr>
		</node>
		<edge from="symbol_a_133" to="symbol_Int_13">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_a_133" to="symbol_&lt;init&gt;_127">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_a_133" to="annot_1">
			<type xlink:href="#SymbolAnnotation"/>
		</edge>
		<node id="line_8_161">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>val a: Int = _</string>
			</attr>
		</node>
		<node id="line_0_162">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_8_161" to="line_0_162">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<node id="line_8_159">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>val $outer: angelic.simple.MySketch = _</string>
			</attr>
		</node>
		<edge from="line_8_159" to="symbol_$outer_144">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_160">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_8_159" to="line_0_160">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_8_126" to="line_8_159">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_8_159" to="line_8_161">
			<type xlink:href="#FcnDefParamsNext"/>
		</edge>
		<node id="line_9_163">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>val c: Int = _</string>
			</attr>
		</node>
		<node id="symbol_c_138">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>c</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue.c</string>
			</attr>
		</node>
		<edge from="symbol_c_138" to="symbol_Int_13">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_c_138" to="symbol_&lt;init&gt;_127">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_c_138" to="annot_20">
			<type xlink:href="#SymbolAnnotation"/>
		</edge>
		<node id="line_9_137">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>c</string>
			</attr>
		</node>
		<edge from="line_9_137" to="symbol_Int_13">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<node id="line_9_134">
			<type xlink:href="#Assign"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this.c = c</string>
			</attr>
		</node>
		<edge from="line_9_134" to="symbol_Unit_45">
			<type xlink:href="#AssignTypeSymbol"/>
		</edge>
		<node id="line_9_135">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this.c</string>
			</attr>
		</node>
		<edge from="line_9_135" to="symbol_c _111">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_9_135" to="symbol_Int_13">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_9_136">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this</string>
			</attr>
		</node>
		<edge from="line_9_136" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_9_136" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_9_135" to="line_9_136">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<edge from="line_9_134" to="line_9_135">
			<type xlink:href="#AssignLhs"/>
		</edge>
		<edge from="line_8_129" to="line_9_134">
			<type xlink:href="#BlockStmtNext"/>
		</edge>
		<node id="line_8_139">
			<type xlink:href="#If"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>if ($outer.eq(null))
  throw new java.lang.NullPointerException()
else
  MySketch$MyValue.this.$outer = $outer</string>
			</attr>
		</node>
		<edge from="line_8_139" to="symbol_Unit_45">
			<type xlink:href="#IfTypeSymbol"/>
		</edge>
		<node id="line_8_140">
			<type xlink:href="#FcnCallBinarySameObj"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer.eq(null)</string>
			</attr>
		</node>
		<node id="symbol_eq_141">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>eq</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang.Object.eq</string>
			</attr>
		</node>
		<node id="symbol_Object_52">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Object</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang.Object</string>
			</attr>
		</node>
		<edge from="symbol_Object_52" to="symbol_Object_52">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_lang_53">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>lang</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang</string>
			</attr>
		</node>
		<edge from="symbol_lang_53" to="symbol_lang_53">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_java_54">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>java</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java</string>
			</attr>
		</node>
		<edge from="symbol_java_54" to="symbol_java_54">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_java_54" to="symbol_&lt;root&gt;_4">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_lang_53" to="symbol_java_54">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_NullPointerException_149">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>NullPointerException</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang.NullPointerException</string>
			</attr>
		</node>
		<edge from="symbol_NullPointerException_149" to="symbol_NullPointerException_149">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_&lt;init&gt;_148">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang.NullPointerException.&lt;init&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;init&gt;_148" to="symbol_&lt;init&gt;_148">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_8_147">
			<type xlink:href="#NewConstructor"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>new java.lang.NullPointerException()</string>
			</attr>
		</node>
		<edge from="line_8_147" to="symbol_NullPointerException_149">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_150">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_8_147" to="empty_chain_150">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_8_147" to="symbol_NullPointerException_149">
			<type xlink:href="#NewClassSymbol"/>
		</edge>
		<node id="line_8_145">
			<type xlink:href="#Throw"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>throw new java.lang.NullPointerException()</string>
			</attr>
		</node>
		<node id="symbol_Nothing_146">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Nothing</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Nothing</string>
			</attr>
		</node>
		<edge from="symbol_Nothing_146" to="symbol_Nothing_146">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_Nothing_146" to="symbol_scala_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_10_199">
			<type xlink:href="#Throw"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>throw new java.lang.NullPointerException()</string>
			</attr>
		</node>
		<node id="line_10_200">
			<type xlink:href="#NewConstructor"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>new java.lang.NullPointerException()</string>
			</attr>
		</node>
		<edge from="line_10_200" to="symbol_&lt;init&gt;_148">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_10_200" to="symbol_NullPointerException_149">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_201">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_10_200" to="empty_chain_201">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_10_200" to="symbol_NullPointerException_149">
			<type xlink:href="#NewClassSymbol"/>
		</edge>
		<edge from="line_10_199" to="line_10_200">
			<type xlink:href="#ThrowExpr"/>
		</edge>
		<node id="line_10_194">
			<type xlink:href="#If"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>if ($outer.eq(null))
  throw new java.lang.NullPointerException()
else
  MySketch$DontAssign.this.$outer = $outer</string>
			</attr>
		</node>
		<edge from="line_10_194" to="symbol_Unit_45">
			<type xlink:href="#IfTypeSymbol"/>
		</edge>
		<node id="line_10_195">
			<type xlink:href="#FcnCallBinarySameObj"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer.eq(null)</string>
			</attr>
		</node>
		<edge from="line_10_195" to="symbol_eq_141">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_10_195" to="symbol_Boolean_71">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_10_196">
			<type xlink:href="#NullTypeConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>null</string>
			</attr>
		</node>
		<edge from="line_10_196" to="symbol_Object_52">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_10_195" to="line_10_196">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_10_197">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer</string>
			</attr>
		</node>
		<node id="symbol_$outer_198">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign.$outer</string>
			</attr>
		</node>
		<edge from="symbol_$outer_198" to="symbol_MySketch_38">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_&lt;init&gt;_187">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign.&lt;init&gt;</string>
			</attr>
		</node>
		<node id="symbol_MySketch$DontAssign_166">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>MySketch$DontAssign</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign</string>
			</attr>
		</node>
		<edge from="symbol_MySketch$DontAssign_166" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_MySketch$DontAssign_166" to="symbol_simple_35">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_10_165">
			<type xlink:href="#ClassDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>class MySketch$DontAssign extends java.lang.Object with ScalaObject {
  &lt;paramaccessor&gt; private[this] val c: Int = _;
  &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def c(): Int = MySketch$DontAssign.this.c;
  protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
  &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$DontAssign$$$outer(): angelic.simple.MySketch = MySketch$DontAssign.this.$outer;
  def this($outer: angelic.simple.MySketch, c: Int): angelic.simple.MySketch$DontAssign = {
    MySketch$DontAssign.this.c = c;
    if ($outer.eq(null))
      throw new java.lang.NullPointerException()
    else
      MySketch$DontAssign.this.$outer = $outer;
    MySketch$DontAssign.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="empty_chain_167">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_10_165" to="empty_chain_167">
			<type xlink:href="#ClassDefTypeParamsChain"/>
		</edge>
		<node id="line_10_168">
			<type xlink:href="#Template"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>21</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>21</int>
			</attr>
			<attr name="scalaSource">
				<string>java.lang.Object with ScalaObject {
  &lt;paramaccessor&gt; private[this] val c: Int = _;
  &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def c(): Int = MySketch$DontAssign.this.c;
  protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
  &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$DontAssign$$$outer(): angelic.simple.MySketch = MySketch$DontAssign.this.$outer;
  def this($outer: angelic.simple.MySketch, c: Int): angelic.simple.MySketch$DontAssign = {
    MySketch$DontAssign.this.c = c;
    if ($outer.eq(null))
      throw new java.lang.NullPointerException()
    else
      MySketch$DontAssign.this.$outer = $outer;
    MySketch$DontAssign.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="symbol_&lt;local DontAssign&gt;_169">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;local DontAssign&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign.&lt;local DontAssign&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;local DontAssign&gt;_169" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_10_168" to="symbol_&lt;local DontAssign&gt;_169">
			<type xlink:href="#TemplateSymbol"/>
		</edge>
		<edge from="line_10_168" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#TemplateTypeSymbol"/>
		</edge>
		<node id="line_10_170">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>26</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>26</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;paramaccessor&gt; private[this] val c: Int = _</string>
			</attr>
		</node>
		<node id="symbol_c _171">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>c</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign.c</string>
			</attr>
		</node>
		<edge from="symbol_c _171" to="symbol_Int_13">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_c _171" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_10_175">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>26</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>26</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.this.c</string>
			</attr>
		</node>
		<edge from="line_10_175" to="symbol_Int_13">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_10_176">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>26</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>26</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.this</string>
			</attr>
		</node>
		<edge from="line_10_176" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_10_176" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_10_175" to="line_10_176">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_10_173">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>26</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>26</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def c(): Int = MySketch$DontAssign.this.c</string>
			</attr>
		</node>
		<node id="symbol_c_174">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>c</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign.c</string>
			</attr>
		</node>
		<edge from="symbol_c_174" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_c_174" to="symbol_c_174">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_10_173" to="symbol_c_174">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="empty_chain_177">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_10_173" to="empty_chain_177">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_10_168" to="line_10_173">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_10_173" to="line_10_175">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_10_175" to="symbol_c _171">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<node id="line_10_190">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>26</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>26</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.this.c</string>
			</attr>
		</node>
		<edge from="line_10_190" to="symbol_Int_13">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_10_191">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>26</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>26</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.this</string>
			</attr>
		</node>
		<edge from="line_10_191" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_10_191" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_10_190" to="line_10_191">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_10_189">
			<type xlink:href="#Assign"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>26</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>26</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.this.c = c</string>
			</attr>
		</node>
		<edge from="line_10_189" to="symbol_Unit_45">
			<type xlink:href="#AssignTypeSymbol"/>
		</edge>
		<node id="line_10_192">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>26</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>26</int>
			</attr>
			<attr name="scalaSource">
				<string>c</string>
			</attr>
		</node>
		<node id="symbol_c_193">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>c</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign.c</string>
			</attr>
		</node>
		<edge from="symbol_c_193" to="symbol_Int_13">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_c_193" to="symbol_&lt;init&gt;_187">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_10_211">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>26</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>26</int>
			</attr>
			<attr name="scalaSource">
				<string>val c: Int = _</string>
			</attr>
		</node>
		<node id="line_0_212">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_10_211" to="line_0_212">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<node id="line_10_209">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>21</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>21</int>
			</attr>
			<attr name="scalaSource">
				<string>val $outer: angelic.simple.MySketch = _</string>
			</attr>
		</node>
		<edge from="line_10_209" to="symbol_$outer_198">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_210">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_10_209" to="line_0_210">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<node id="line_10_186">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>21</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>21</int>
			</attr>
			<attr name="scalaSource">
				<string>def this($outer: angelic.simple.MySketch, c: Int): angelic.simple.MySketch$DontAssign = {
  MySketch$DontAssign.this.c = c;
  if ($outer.eq(null))
    throw new java.lang.NullPointerException()
  else
    MySketch$DontAssign.this.$outer = $outer;
  MySketch$DontAssign.super.this();
  ()
}</string>
			</attr>
		</node>
		<edge from="line_10_186" to="symbol_&lt;init&gt;_187">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="line_10_188">
			<type xlink:href="#Block"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>21</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>21</int>
			</attr>
			<attr name="scalaSource">
				<string>{
  MySketch$DontAssign.this.c = c;
  if ($outer.eq(null))
    throw new java.lang.NullPointerException()
  else
    MySketch$DontAssign.this.$outer = $outer;
  MySketch$DontAssign.super.this();
  ()
}</string>
			</attr>
		</node>
		<edge from="line_10_188" to="symbol_Unit_45">
			<type xlink:href="#BlockTypeSymbol"/>
		</edge>
		<edge from="line_10_188" to="line_10_189">
			<type xlink:href="#BlockStmtChain"/>
		</edge>
		<node id="line_10_208">
			<type xlink:href="#UnitConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>21</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>21</int>
			</attr>
			<attr name="scalaSource">
				<string>()</string>
			</attr>
		</node>
		<edge from="line_10_208" to="symbol_Unit_45">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_10_188" to="line_10_208">
			<type xlink:href="#BlockExpr"/>
		</edge>
		<edge from="line_10_186" to="line_10_188">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_10_168" to="line_10_186">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_10_186" to="line_10_209">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_10_209" to="line_10_211">
			<type xlink:href="#FcnDefParamsNext"/>
		</edge>
		<edge from="line_10_211" to="symbol_c_193">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<edge from="line_10_192" to="symbol_c_193">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_10_192" to="symbol_Int_13">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_10_189" to="line_10_192">
			<type xlink:href="#AssignRhs"/>
		</edge>
		<edge from="line_10_189" to="line_10_194">
			<type xlink:href="#BlockStmtNext"/>
		</edge>
		<edge from="line_10_189" to="line_10_190">
			<type xlink:href="#AssignLhs"/>
		</edge>
		<edge from="line_10_190" to="symbol_c _171">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_10_165" to="symbol_c _171">
			<type xlink:href="#ClassDefFieldSymbol"/>
		</edge>
		<edge from="line_10_170" to="symbol_c _171">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_172">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_10_170" to="line_0_172">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_10_168" to="line_10_170">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<node id="line_10_178">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _</string>
			</attr>
		</node>
		<node id="symbol_$outer _179">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign.$outer</string>
			</attr>
		</node>
		<edge from="symbol_$outer _179" to="symbol_MySketch_38">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_$outer _179" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_10_183">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.this.$outer</string>
			</attr>
		</node>
		<edge from="line_10_183" to="symbol_MySketch_38">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_10_184">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.this</string>
			</attr>
		</node>
		<edge from="line_10_184" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_10_184" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_10_183" to="line_10_184">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_10_181">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$DontAssign$$$outer(): angelic.simple.MySketch = MySketch$DontAssign.this.$outer</string>
			</attr>
		</node>
		<node id="symbol_angelic$simple$MySketch$DontAssign$$$outer_182">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>angelic$simple$MySketch$DontAssign$$$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign.angelic$simple$MySketch$DontAssign$$$outer</string>
			</attr>
		</node>
		<edge from="symbol_angelic$simple$MySketch$DontAssign$$$outer_182" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_angelic$simple$MySketch$DontAssign$$$outer_182" to="symbol_angelic$simple$MySketch$DontAssign$$$outer_182">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_10_181" to="symbol_angelic$simple$MySketch$DontAssign$$$outer_182">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="empty_chain_185">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_10_181" to="empty_chain_185">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_10_168" to="line_10_181">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_10_181" to="line_10_183">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_10_183" to="symbol_$outer _179">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<node id="line_10_203">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.this.$outer</string>
			</attr>
		</node>
		<edge from="line_10_203" to="symbol_MySketch_38">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_10_204">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.this</string>
			</attr>
		</node>
		<edge from="line_10_204" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_10_204" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_10_203" to="line_10_204">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_10_202">
			<type xlink:href="#Assign"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.this.$outer = $outer</string>
			</attr>
		</node>
		<edge from="line_10_202" to="symbol_Unit_45">
			<type xlink:href="#AssignTypeSymbol"/>
		</edge>
		<node id="line_10_205">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer</string>
			</attr>
		</node>
		<edge from="line_10_205" to="symbol_$outer_198">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_10_205" to="symbol_MySketch_38">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_10_202" to="line_10_205">
			<type xlink:href="#AssignRhs"/>
		</edge>
		<edge from="line_10_194" to="line_10_202">
			<type xlink:href="#IfElse"/>
		</edge>
		<edge from="line_10_202" to="line_10_203">
			<type xlink:href="#AssignLhs"/>
		</edge>
		<edge from="line_10_203" to="symbol_$outer _179">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_10_165" to="symbol_$outer _179">
			<type xlink:href="#ClassDefFieldSymbol"/>
		</edge>
		<edge from="line_10_178" to="symbol_$outer _179">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_180">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_10_178" to="line_0_180">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_10_168" to="line_10_178">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_10_165" to="line_10_168">
			<type xlink:href="#ClassDefImpl"/>
		</edge>
		<edge from="line_1_33" to="line_10_165">
			<type xlink:href="#PackageDefElement"/>
		</edge>
		<edge from="line_10_165" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ClassDefSymbol"/>
		</edge>
		<node id="symbol_mv _219">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>mv</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign2.mv</string>
			</attr>
		</node>
		<node id="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>MySketch$DontAssign2</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign2</string>
			</attr>
		</node>
		<edge from="symbol_MySketch$DontAssign2_214" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_MySketch$DontAssign2_214" to="symbol_simple_35">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_11_213">
			<type xlink:href="#ClassDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>class MySketch$DontAssign2 extends java.lang.Object with ScalaObject {
  &lt;paramaccessor&gt; private[this] val mv: angelic.simple.MySketch$DontAssign = _;
  &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def mv(): angelic.simple.MySketch$DontAssign = MySketch$DontAssign2.this.mv;
  protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
  &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$DontAssign2$$$outer(): angelic.simple.MySketch = MySketch$DontAssign2.this.$outer;
  def this($outer: angelic.simple.MySketch, mv: angelic.simple.MySketch$DontAssign): angelic.simple.MySketch$DontAssign2 = {
    MySketch$DontAssign2.this.mv = mv;
    if ($outer.eq(null))
      throw new java.lang.NullPointerException()
    else
      MySketch$DontAssign2.this.$outer = $outer;
    MySketch$DontAssign2.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="empty_chain_215">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_11_213" to="empty_chain_215">
			<type xlink:href="#ClassDefTypeParamsChain"/>
		</edge>
		<node id="line_11_216">
			<type xlink:href="#Template"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>22</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>22</int>
			</attr>
			<attr name="scalaSource">
				<string>java.lang.Object with ScalaObject {
  &lt;paramaccessor&gt; private[this] val mv: angelic.simple.MySketch$DontAssign = _;
  &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def mv(): angelic.simple.MySketch$DontAssign = MySketch$DontAssign2.this.mv;
  protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
  &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$DontAssign2$$$outer(): angelic.simple.MySketch = MySketch$DontAssign2.this.$outer;
  def this($outer: angelic.simple.MySketch, mv: angelic.simple.MySketch$DontAssign): angelic.simple.MySketch$DontAssign2 = {
    MySketch$DontAssign2.this.mv = mv;
    if ($outer.eq(null))
      throw new java.lang.NullPointerException()
    else
      MySketch$DontAssign2.this.$outer = $outer;
    MySketch$DontAssign2.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="symbol_&lt;local DontAssign2&gt;_217">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;local DontAssign2&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign2.&lt;local DontAssign2&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;local DontAssign2&gt;_217" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_11_216" to="symbol_&lt;local DontAssign2&gt;_217">
			<type xlink:href="#TemplateSymbol"/>
		</edge>
		<edge from="line_11_216" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#TemplateTypeSymbol"/>
		</edge>
		<node id="line_11_218">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>27</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>27</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;paramaccessor&gt; private[this] val mv: angelic.simple.MySketch$DontAssign = _</string>
			</attr>
		</node>
		<edge from="line_11_218" to="symbol_mv _219">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_220">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_11_218" to="line_0_220">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_11_216" to="line_11_218">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<node id="line_11_221">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>27</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>27</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def mv(): angelic.simple.MySketch$DontAssign = MySketch$DontAssign2.this.mv</string>
			</attr>
		</node>
		<node id="symbol_mv_222">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>mv</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign2.mv</string>
			</attr>
		</node>
		<edge from="symbol_mv_222" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_mv_222" to="symbol_mv_222">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_11_221" to="symbol_mv_222">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="line_11_223">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>27</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>27</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.this.mv</string>
			</attr>
		</node>
		<edge from="line_11_223" to="symbol_mv _219">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_11_223" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_11_224">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>27</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>27</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.this</string>
			</attr>
		</node>
		<edge from="line_11_224" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_11_224" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_11_223" to="line_11_224">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<edge from="line_11_221" to="line_11_223">
			<type xlink:href="#FcnBody"/>
		</edge>
		<node id="empty_chain_225">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_11_221" to="empty_chain_225">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_11_216" to="line_11_221">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<node id="line_11_226">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _</string>
			</attr>
		</node>
		<node id="symbol_$outer _227">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign2.$outer</string>
			</attr>
		</node>
		<edge from="symbol_$outer _227" to="symbol_MySketch_38">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_$outer _227" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_11_231">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.this.$outer</string>
			</attr>
		</node>
		<edge from="line_11_231" to="symbol_MySketch_38">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_11_232">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.this</string>
			</attr>
		</node>
		<edge from="line_11_232" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_11_232" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_11_231" to="line_11_232">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_11_229">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$DontAssign2$$$outer(): angelic.simple.MySketch = MySketch$DontAssign2.this.$outer</string>
			</attr>
		</node>
		<node id="symbol_angelic$simple$MySketch$DontAssign2$$$outer_230">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>angelic$simple$MySketch$DontAssign2$$$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign2.angelic$simple$MySketch$DontAssign2$$$outer</string>
			</attr>
		</node>
		<edge from="symbol_angelic$simple$MySketch$DontAssign2$$$outer_230" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_angelic$simple$MySketch$DontAssign2$$$outer_230" to="symbol_angelic$simple$MySketch$DontAssign2$$$outer_230">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_11_229" to="symbol_angelic$simple$MySketch$DontAssign2$$$outer_230">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="empty_chain_233">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_11_229" to="empty_chain_233">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_11_216" to="line_11_229">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_11_229" to="line_11_231">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_11_231" to="symbol_$outer _227">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<node id="line_11_251">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.this.$outer</string>
			</attr>
		</node>
		<edge from="line_11_251" to="symbol_MySketch_38">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_11_252">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.this</string>
			</attr>
		</node>
		<edge from="line_11_252" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_11_252" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_11_251" to="line_11_252">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_11_250">
			<type xlink:href="#Assign"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.this.$outer = $outer</string>
			</attr>
		</node>
		<edge from="line_11_250" to="symbol_Unit_45">
			<type xlink:href="#AssignTypeSymbol"/>
		</edge>
		<node id="line_11_253">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer</string>
			</attr>
		</node>
		<node id="symbol_$outer_246">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign2.$outer</string>
			</attr>
		</node>
		<edge from="symbol_$outer_246" to="symbol_MySketch_38">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_&lt;init&gt;_235">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign2.&lt;init&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;init&gt;_235" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_235" to="symbol_&lt;init&gt;_235">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_11_234">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>22</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>22</int>
			</attr>
			<attr name="scalaSource">
				<string>def this($outer: angelic.simple.MySketch, mv: angelic.simple.MySketch$DontAssign): angelic.simple.MySketch$DontAssign2 = {
  MySketch$DontAssign2.this.mv = mv;
  if ($outer.eq(null))
    throw new java.lang.NullPointerException()
  else
    MySketch$DontAssign2.this.$outer = $outer;
  MySketch$DontAssign2.super.this();
  ()
}</string>
			</attr>
		</node>
		<node id="line_11_236">
			<type xlink:href="#Block"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>22</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>22</int>
			</attr>
			<attr name="scalaSource">
				<string>{
  MySketch$DontAssign2.this.mv = mv;
  if ($outer.eq(null))
    throw new java.lang.NullPointerException()
  else
    MySketch$DontAssign2.this.$outer = $outer;
  MySketch$DontAssign2.super.this();
  ()
}</string>
			</attr>
		</node>
		<edge from="line_11_236" to="symbol_Unit_45">
			<type xlink:href="#BlockTypeSymbol"/>
		</edge>
		<node id="line_11_237">
			<type xlink:href="#Assign"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>27</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>27</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.this.mv = mv</string>
			</attr>
		</node>
		<edge from="line_11_237" to="symbol_Unit_45">
			<type xlink:href="#AssignTypeSymbol"/>
		</edge>
		<node id="line_11_238">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>27</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>27</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.this.mv</string>
			</attr>
		</node>
		<edge from="line_11_238" to="symbol_mv _219">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_11_238" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_11_239">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>27</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>27</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.this</string>
			</attr>
		</node>
		<edge from="line_11_239" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_11_239" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_11_238" to="line_11_239">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<edge from="line_11_237" to="line_11_238">
			<type xlink:href="#AssignLhs"/>
		</edge>
		<node id="line_11_240">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>27</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>27</int>
			</attr>
			<attr name="scalaSource">
				<string>mv</string>
			</attr>
		</node>
		<node id="symbol_mv_241">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>mv</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$DontAssign2.mv</string>
			</attr>
		</node>
		<edge from="symbol_mv_241" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_mv_241" to="symbol_&lt;init&gt;_235">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_11_259">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>27</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>27</int>
			</attr>
			<attr name="scalaSource">
				<string>val mv: angelic.simple.MySketch$DontAssign = _</string>
			</attr>
		</node>
		<node id="line_0_260">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_11_259" to="line_0_260">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<node id="line_11_257">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>22</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>22</int>
			</attr>
			<attr name="scalaSource">
				<string>val $outer: angelic.simple.MySketch = _</string>
			</attr>
		</node>
		<edge from="line_11_257" to="symbol_$outer_246">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_258">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_11_257" to="line_0_258">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_11_234" to="line_11_257">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_11_257" to="line_11_259">
			<type xlink:href="#FcnDefParamsNext"/>
		</edge>
		<edge from="line_11_259" to="symbol_mv_241">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<edge from="line_11_240" to="symbol_mv_241">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_11_240" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_11_237" to="line_11_240">
			<type xlink:href="#AssignRhs"/>
		</edge>
		<node id="line_11_242">
			<type xlink:href="#If"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>if ($outer.eq(null))
  throw new java.lang.NullPointerException()
else
  MySketch$DontAssign2.this.$outer = $outer</string>
			</attr>
		</node>
		<edge from="line_11_242" to="symbol_Unit_45">
			<type xlink:href="#IfTypeSymbol"/>
		</edge>
		<node id="line_11_243">
			<type xlink:href="#FcnCallBinarySameObj"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer.eq(null)</string>
			</attr>
		</node>
		<edge from="line_11_243" to="symbol_eq_141">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_11_243" to="symbol_Boolean_71">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_11_244">
			<type xlink:href="#NullTypeConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>null</string>
			</attr>
		</node>
		<edge from="line_11_244" to="symbol_Object_52">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_11_243" to="line_11_244">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_11_245">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer</string>
			</attr>
		</node>
		<edge from="line_11_245" to="symbol_$outer_246">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_11_245" to="symbol_MySketch_38">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_11_243" to="line_11_245">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_11_242" to="line_11_243">
			<type xlink:href="#IfCond"/>
		</edge>
		<node id="line_11_247">
			<type xlink:href="#Throw"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>throw new java.lang.NullPointerException()</string>
			</attr>
		</node>
		<edge from="line_11_247" to="symbol_Nothing_146">
			<type xlink:href="#ThrowTypeSymbol"/>
		</edge>
		<node id="line_11_248">
			<type xlink:href="#NewConstructor"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>new java.lang.NullPointerException()</string>
			</attr>
		</node>
		<edge from="line_11_248" to="symbol_&lt;init&gt;_148">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_11_248" to="symbol_NullPointerException_149">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_249">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_11_248" to="empty_chain_249">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_11_248" to="symbol_NullPointerException_149">
			<type xlink:href="#NewClassSymbol"/>
		</edge>
		<edge from="line_11_247" to="line_11_248">
			<type xlink:href="#ThrowExpr"/>
		</edge>
		<edge from="line_11_242" to="line_11_247">
			<type xlink:href="#IfThen"/>
		</edge>
		<edge from="line_11_242" to="line_11_250">
			<type xlink:href="#IfElse"/>
		</edge>
		<node id="line_11_254">
			<type xlink:href="#FcnSuperCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>22</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>22</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign2.super.this()</string>
			</attr>
		</node>
		<node id="symbol_&lt;init&gt;_156">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang.Object.&lt;init&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;init&gt;_156" to="symbol_Object_52">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_156" to="symbol_&lt;init&gt;_156">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_8_155">
			<type xlink:href="#FcnSuperCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.super.this()</string>
			</attr>
		</node>
		<edge from="line_8_155" to="symbol_Object_52">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_157">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_8_155" to="empty_chain_157">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_8_139" to="line_8_155">
			<type xlink:href="#BlockStmtNext"/>
		</edge>
		<edge from="line_8_155" to="symbol_&lt;init&gt;_156">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="line_10_206">
			<type xlink:href="#FcnSuperCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>21</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>21</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$DontAssign.super.this()</string>
			</attr>
		</node>
		<edge from="line_10_206" to="symbol_Object_52">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_207">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_10_206" to="empty_chain_207">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_10_194" to="line_10_206">
			<type xlink:href="#BlockStmtNext"/>
		</edge>
		<edge from="line_10_206" to="symbol_&lt;init&gt;_156">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="line_12_302">
			<type xlink:href="#FcnSuperCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>19</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>19</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.super.this()</string>
			</attr>
		</node>
		<edge from="line_12_302" to="symbol_Object_52">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_303">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_12_302" to="empty_chain_303">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_12_290">
			<type xlink:href="#If"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>if ($outer.eq(null))
  throw new java.lang.NullPointerException()
else
  MySketch$MyValue2.this.$outer = $outer</string>
			</attr>
		</node>
		<edge from="line_12_290" to="symbol_Unit_45">
			<type xlink:href="#IfTypeSymbol"/>
		</edge>
		<node id="line_12_291">
			<type xlink:href="#FcnCallBinarySameObj"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer.eq(null)</string>
			</attr>
		</node>
		<edge from="line_12_291" to="symbol_eq_141">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_12_291" to="symbol_Boolean_71">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_12_292">
			<type xlink:href="#NullTypeConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>null</string>
			</attr>
		</node>
		<edge from="line_12_292" to="symbol_Object_52">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_12_291" to="line_12_292">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_12_293">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer</string>
			</attr>
		</node>
		<node id="symbol_$outer_294">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue2.$outer</string>
			</attr>
		</node>
		<edge from="symbol_$outer_294" to="symbol_MySketch_38">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_&lt;init&gt;_283">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue2.&lt;init&gt;</string>
			</attr>
		</node>
		<node id="symbol_MySketch$MyValue2_262">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>MySketch$MyValue2</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue2</string>
			</attr>
		</node>
		<edge from="symbol_MySketch$MyValue2_262" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_MySketch$MyValue2_262" to="symbol_simple_35">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_12_261">
			<type xlink:href="#ClassDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>class MySketch$MyValue2 extends java.lang.Object with ScalaObject {
  &lt;paramaccessor&gt; private[this] val mv: angelic.simple.MySketch$MyValue = _;
  &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def mv(): angelic.simple.MySketch$MyValue = MySketch$MyValue2.this.mv;
  protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
  &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$MyValue2$$$outer(): angelic.simple.MySketch = MySketch$MyValue2.this.$outer;
  def this($outer: angelic.simple.MySketch, mv: angelic.simple.MySketch$MyValue): angelic.simple.MySketch$MyValue2 = {
    MySketch$MyValue2.this.mv = mv;
    if ($outer.eq(null))
      throw new java.lang.NullPointerException()
    else
      MySketch$MyValue2.this.$outer = $outer;
    MySketch$MyValue2.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="empty_chain_263">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_12_261" to="empty_chain_263">
			<type xlink:href="#ClassDefTypeParamsChain"/>
		</edge>
		<node id="line_12_264">
			<type xlink:href="#Template"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>19</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>19</int>
			</attr>
			<attr name="scalaSource">
				<string>java.lang.Object with ScalaObject {
  &lt;paramaccessor&gt; private[this] val mv: angelic.simple.MySketch$MyValue = _;
  &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def mv(): angelic.simple.MySketch$MyValue = MySketch$MyValue2.this.mv;
  protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
  &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$MyValue2$$$outer(): angelic.simple.MySketch = MySketch$MyValue2.this.$outer;
  def this($outer: angelic.simple.MySketch, mv: angelic.simple.MySketch$MyValue): angelic.simple.MySketch$MyValue2 = {
    MySketch$MyValue2.this.mv = mv;
    if ($outer.eq(null))
      throw new java.lang.NullPointerException()
    else
      MySketch$MyValue2.this.$outer = $outer;
    MySketch$MyValue2.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="symbol_&lt;local MyValue2&gt;_265">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;local MyValue2&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue2.&lt;local MyValue2&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;local MyValue2&gt;_265" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_12_264" to="symbol_&lt;local MyValue2&gt;_265">
			<type xlink:href="#TemplateSymbol"/>
		</edge>
		<edge from="line_12_264" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#TemplateTypeSymbol"/>
		</edge>
		<node id="line_12_266">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>24</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>24</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;paramaccessor&gt; private[this] val mv: angelic.simple.MySketch$MyValue = _</string>
			</attr>
		</node>
		<node id="symbol_mv _267">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>mv</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue2.mv</string>
			</attr>
		</node>
		<edge from="symbol_mv _267" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_mv _267" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_12_271">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>24</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>24</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.this.mv</string>
			</attr>
		</node>
		<edge from="line_12_271" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_12_272">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>24</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>24</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.this</string>
			</attr>
		</node>
		<edge from="line_12_272" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_12_272" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_12_271" to="line_12_272">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_12_269">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>24</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>24</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def mv(): angelic.simple.MySketch$MyValue = MySketch$MyValue2.this.mv</string>
			</attr>
		</node>
		<node id="symbol_mv_270">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>mv</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue2.mv</string>
			</attr>
		</node>
		<edge from="symbol_mv_270" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_mv_270" to="symbol_mv_270">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_12_269" to="symbol_mv_270">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="empty_chain_273">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_12_269" to="empty_chain_273">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_12_264" to="line_12_269">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_12_269" to="line_12_271">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_12_271" to="symbol_mv _267">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<node id="line_12_286">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>24</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>24</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.this.mv</string>
			</attr>
		</node>
		<edge from="line_12_286" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_12_287">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>24</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>24</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.this</string>
			</attr>
		</node>
		<edge from="line_12_287" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_12_287" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_12_286" to="line_12_287">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_12_285">
			<type xlink:href="#Assign"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>24</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>24</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.this.mv = mv</string>
			</attr>
		</node>
		<edge from="line_12_285" to="symbol_Unit_45">
			<type xlink:href="#AssignTypeSymbol"/>
		</edge>
		<node id="line_12_288">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>24</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>24</int>
			</attr>
			<attr name="scalaSource">
				<string>mv</string>
			</attr>
		</node>
		<node id="symbol_mv_289">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>mv</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue2.mv</string>
			</attr>
		</node>
		<edge from="symbol_mv_289" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_mv_289" to="symbol_&lt;init&gt;_283">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_12_307">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>24</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>24</int>
			</attr>
			<attr name="scalaSource">
				<string>val mv: angelic.simple.MySketch$MyValue = _</string>
			</attr>
		</node>
		<node id="line_0_308">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_12_307" to="line_0_308">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<node id="line_12_305">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>19</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>19</int>
			</attr>
			<attr name="scalaSource">
				<string>val $outer: angelic.simple.MySketch = _</string>
			</attr>
		</node>
		<edge from="line_12_305" to="symbol_$outer_294">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_306">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_12_305" to="line_0_306">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<node id="line_12_282">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>19</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>19</int>
			</attr>
			<attr name="scalaSource">
				<string>def this($outer: angelic.simple.MySketch, mv: angelic.simple.MySketch$MyValue): angelic.simple.MySketch$MyValue2 = {
  MySketch$MyValue2.this.mv = mv;
  if ($outer.eq(null))
    throw new java.lang.NullPointerException()
  else
    MySketch$MyValue2.this.$outer = $outer;
  MySketch$MyValue2.super.this();
  ()
}</string>
			</attr>
		</node>
		<edge from="line_12_282" to="symbol_&lt;init&gt;_283">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="line_12_284">
			<type xlink:href="#Block"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>19</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>19</int>
			</attr>
			<attr name="scalaSource">
				<string>{
  MySketch$MyValue2.this.mv = mv;
  if ($outer.eq(null))
    throw new java.lang.NullPointerException()
  else
    MySketch$MyValue2.this.$outer = $outer;
  MySketch$MyValue2.super.this();
  ()
}</string>
			</attr>
		</node>
		<edge from="line_12_284" to="symbol_Unit_45">
			<type xlink:href="#BlockTypeSymbol"/>
		</edge>
		<edge from="line_12_284" to="line_12_285">
			<type xlink:href="#BlockStmtChain"/>
		</edge>
		<node id="line_12_304">
			<type xlink:href="#UnitConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>19</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>19</int>
			</attr>
			<attr name="scalaSource">
				<string>()</string>
			</attr>
		</node>
		<edge from="line_12_304" to="symbol_Unit_45">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_12_284" to="line_12_304">
			<type xlink:href="#BlockExpr"/>
		</edge>
		<edge from="line_12_282" to="line_12_284">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_12_264" to="line_12_282">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_12_282" to="line_12_305">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_12_305" to="line_12_307">
			<type xlink:href="#FcnDefParamsNext"/>
		</edge>
		<edge from="line_12_307" to="symbol_mv_289">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<edge from="line_12_288" to="symbol_mv_289">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_12_288" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_12_285" to="line_12_288">
			<type xlink:href="#AssignRhs"/>
		</edge>
		<edge from="line_12_285" to="line_12_290">
			<type xlink:href="#BlockStmtNext"/>
		</edge>
		<edge from="line_12_285" to="line_12_286">
			<type xlink:href="#AssignLhs"/>
		</edge>
		<edge from="line_12_286" to="symbol_mv _267">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_12_261" to="symbol_mv _267">
			<type xlink:href="#ClassDefFieldSymbol"/>
		</edge>
		<edge from="line_12_266" to="symbol_mv _267">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_268">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_12_266" to="line_0_268">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_12_264" to="line_12_266">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<node id="line_12_274">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _</string>
			</attr>
		</node>
		<node id="symbol_$outer _275">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue2.$outer</string>
			</attr>
		</node>
		<edge from="symbol_$outer _275" to="symbol_MySketch_38">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_$outer _275" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_12_279">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.this.$outer</string>
			</attr>
		</node>
		<edge from="line_12_279" to="symbol_MySketch_38">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_12_280">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.this</string>
			</attr>
		</node>
		<edge from="line_12_280" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_12_280" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_12_279" to="line_12_280">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_12_277">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$MyValue2$$$outer(): angelic.simple.MySketch = MySketch$MyValue2.this.$outer</string>
			</attr>
		</node>
		<node id="symbol_angelic$simple$MySketch$MyValue2$$$outer_278">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>angelic$simple$MySketch$MyValue2$$$outer</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch$MyValue2.angelic$simple$MySketch$MyValue2$$$outer</string>
			</attr>
		</node>
		<edge from="symbol_angelic$simple$MySketch$MyValue2$$$outer_278" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_angelic$simple$MySketch$MyValue2$$$outer_278" to="symbol_angelic$simple$MySketch$MyValue2$$$outer_278">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_12_277" to="symbol_angelic$simple$MySketch$MyValue2$$$outer_278">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="empty_chain_281">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_12_277" to="empty_chain_281">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_12_264" to="line_12_277">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_12_277" to="line_12_279">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_12_279" to="symbol_$outer _275">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<node id="line_12_299">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.this.$outer</string>
			</attr>
		</node>
		<edge from="line_12_299" to="symbol_MySketch_38">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_12_300">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.this</string>
			</attr>
		</node>
		<edge from="line_12_300" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_12_300" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_12_299" to="line_12_300">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<node id="line_12_298">
			<type xlink:href="#Assign"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue2.this.$outer = $outer</string>
			</attr>
		</node>
		<edge from="line_12_298" to="symbol_Unit_45">
			<type xlink:href="#AssignTypeSymbol"/>
		</edge>
		<node id="line_12_301">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer</string>
			</attr>
		</node>
		<edge from="line_12_301" to="symbol_$outer_294">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_12_301" to="symbol_MySketch_38">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_12_298" to="line_12_301">
			<type xlink:href="#AssignRhs"/>
		</edge>
		<edge from="line_12_290" to="line_12_298">
			<type xlink:href="#IfElse"/>
		</edge>
		<edge from="line_12_298" to="line_12_299">
			<type xlink:href="#AssignLhs"/>
		</edge>
		<edge from="line_12_299" to="symbol_$outer _275">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_12_261" to="symbol_$outer _275">
			<type xlink:href="#ClassDefFieldSymbol"/>
		</edge>
		<edge from="line_12_274" to="symbol_$outer _275">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_276">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_12_274" to="line_0_276">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_12_264" to="line_12_274">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_12_261" to="line_12_264">
			<type xlink:href="#ClassDefImpl"/>
		</edge>
		<edge from="line_1_33" to="line_12_261">
			<type xlink:href="#PackageDefElement"/>
		</edge>
		<edge from="line_12_261" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#ClassDefSymbol"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_283" to="symbol_MySketch$MyValue2_262">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_283" to="symbol_&lt;init&gt;_283">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="symbol_$outer_294" to="symbol_&lt;init&gt;_283">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_12_293" to="symbol_$outer_294">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_12_293" to="symbol_MySketch_38">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_12_291" to="line_12_293">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_12_290" to="line_12_291">
			<type xlink:href="#IfCond"/>
		</edge>
		<node id="line_12_295">
			<type xlink:href="#Throw"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>throw new java.lang.NullPointerException()</string>
			</attr>
		</node>
		<edge from="line_12_295" to="symbol_Nothing_146">
			<type xlink:href="#ThrowTypeSymbol"/>
		</edge>
		<node id="line_12_296">
			<type xlink:href="#NewConstructor"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>new java.lang.NullPointerException()</string>
			</attr>
		</node>
		<edge from="line_12_296" to="symbol_&lt;init&gt;_148">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_12_296" to="symbol_NullPointerException_149">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_297">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_12_296" to="empty_chain_297">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_12_296" to="symbol_NullPointerException_149">
			<type xlink:href="#NewClassSymbol"/>
		</edge>
		<edge from="line_12_295" to="line_12_296">
			<type xlink:href="#ThrowExpr"/>
		</edge>
		<edge from="line_12_290" to="line_12_295">
			<type xlink:href="#IfThen"/>
		</edge>
		<edge from="line_12_290" to="line_12_302">
			<type xlink:href="#BlockStmtNext"/>
		</edge>
		<edge from="line_12_302" to="symbol_&lt;init&gt;_156">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_11_254" to="symbol_&lt;init&gt;_156">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_11_254" to="symbol_Object_52">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_255">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_11_254" to="empty_chain_255">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_11_242" to="line_11_254">
			<type xlink:href="#BlockStmtNext"/>
		</edge>
		<edge from="line_11_237" to="line_11_242">
			<type xlink:href="#BlockStmtNext"/>
		</edge>
		<edge from="line_11_236" to="line_11_237">
			<type xlink:href="#BlockStmtChain"/>
		</edge>
		<node id="line_11_256">
			<type xlink:href="#UnitConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>22</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>22</int>
			</attr>
			<attr name="scalaSource">
				<string>()</string>
			</attr>
		</node>
		<edge from="line_11_256" to="symbol_Unit_45">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_11_236" to="line_11_256">
			<type xlink:href="#BlockExpr"/>
		</edge>
		<edge from="line_11_234" to="line_11_236">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_11_216" to="line_11_234">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_11_234" to="symbol_&lt;init&gt;_235">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<edge from="symbol_$outer_246" to="symbol_&lt;init&gt;_235">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_11_253" to="symbol_$outer_246">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_11_253" to="symbol_MySketch_38">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_11_250" to="line_11_253">
			<type xlink:href="#AssignRhs"/>
		</edge>
		<edge from="line_11_250" to="line_11_251">
			<type xlink:href="#AssignLhs"/>
		</edge>
		<edge from="line_11_251" to="symbol_$outer _227">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_11_213" to="symbol_$outer _227">
			<type xlink:href="#ClassDefFieldSymbol"/>
		</edge>
		<edge from="line_11_226" to="symbol_$outer _227">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_228">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_11_226" to="line_0_228">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_11_216" to="line_11_226">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_11_213" to="line_11_216">
			<type xlink:href="#ClassDefImpl"/>
		</edge>
		<edge from="line_11_213" to="symbol_mv _219">
			<type xlink:href="#ClassDefFieldSymbol"/>
		</edge>
		<edge from="line_1_33" to="line_11_213">
			<type xlink:href="#PackageDefElement"/>
		</edge>
		<edge from="line_11_213" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#ClassDefSymbol"/>
		</edge>
		<edge from="symbol_mv _219" to="symbol_MySketch$DontAssign2_214">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_mv _219" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_187" to="symbol_MySketch$DontAssign_166">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_187" to="symbol_&lt;init&gt;_187">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="symbol_$outer_198" to="symbol_&lt;init&gt;_187">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_10_197" to="symbol_$outer_198">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_10_197" to="symbol_MySketch_38">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_10_195" to="line_10_197">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_10_194" to="line_10_195">
			<type xlink:href="#IfCond"/>
		</edge>
		<edge from="line_10_194" to="line_10_199">
			<type xlink:href="#IfThen"/>
		</edge>
		<edge from="line_10_199" to="symbol_Nothing_146">
			<type xlink:href="#ThrowTypeSymbol"/>
		</edge>
		<edge from="line_8_145" to="symbol_Nothing_146">
			<type xlink:href="#ThrowTypeSymbol"/>
		</edge>
		<edge from="line_8_139" to="line_8_145">
			<type xlink:href="#IfThen"/>
		</edge>
		<edge from="line_8_145" to="line_8_147">
			<type xlink:href="#ThrowExpr"/>
		</edge>
		<edge from="line_8_147" to="symbol_&lt;init&gt;_148">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_148" to="symbol_NullPointerException_149">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_NullPointerException_149" to="symbol_lang_53">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_Object_52" to="symbol_lang_53">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_$asInstanceOf_51">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$asInstanceOf</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang.Object.$asInstanceOf</string>
			</attr>
		</node>
		<edge from="symbol_$asInstanceOf_51" to="symbol_$asInstanceOf_51">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_15_50">
			<type xlink:href="#FcnCallTypeApply"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>15</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>15</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.resolve(MySketch.this.!!()).$asInstanceOf[angelic.simple.MySketch$MyValue]()</string>
			</attr>
		</node>
		<edge from="line_15_50" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_55">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_15_50" to="empty_chain_55">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_15_56">
			<type xlink:href="#FieldAccess"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>15</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>15</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.resolve(MySketch.this.!!()).$asInstanceOf</string>
			</attr>
		</node>
		<edge from="line_15_56" to="symbol_$asInstanceOf_51">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<node id="line_15_57">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>15</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>15</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.resolve(MySketch.this.!!())</string>
			</attr>
		</node>
		<node id="symbol_resolve_58">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>resolve</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch.resolve</string>
			</attr>
		</node>
		<node id="symbol_AngelicSketch_59">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>AngelicSketch</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch</string>
			</attr>
		</node>
		<edge from="symbol_AngelicSketch_59" to="symbol_AngelicSketch_59">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_AngelicSketch_59" to="symbol_skalch_3">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_$bang$bang_61">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$bang$bang</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch.$bang$bang</string>
			</attr>
		</node>
		<edge from="symbol_$bang$bang_61" to="symbol_$bang$bang_61">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_15_60">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>15</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>15</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.!!()</string>
			</attr>
		</node>
		<node id="symbol_AngelicSketch$$bang$bang_62">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>AngelicSketch$$bang$bang</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch$$bang$bang</string>
			</attr>
		</node>
		<edge from="symbol_AngelicSketch$$bang$bang_62" to="symbol_AngelicSketch$$bang$bang_62">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_AngelicSketch$$bang$bang_62" to="symbol_skalch_3">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_16_73">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.!!()</string>
			</attr>
		</node>
		<edge from="line_16_73" to="symbol_$bang$bang_61">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="empty_chain_74">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_16_73" to="empty_chain_74">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_16_75">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_16_75" to="symbol_MySketch_38">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_16_75" to="symbol_MySketch_38">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_16_73" to="line_16_75">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<node id="line_16_72">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.resolve(MySketch.this.!!())</string>
			</attr>
		</node>
		<edge from="line_16_72" to="symbol_resolve_58">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_16_72" to="symbol_Object_52">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_16_76">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_16_76" to="symbol_MySketch_38">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_16_76" to="symbol_MySketch_38">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_16_72" to="line_16_76">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_16_68" to="line_16_72">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_16_72" to="line_16_73">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_16_73" to="symbol_AngelicSketch$$bang$bang_62">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_15_60" to="symbol_AngelicSketch$$bang$bang_62">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_63">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_15_60" to="empty_chain_63">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_15_64">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>15</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>15</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_15_64" to="symbol_MySketch_38">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_15_64" to="symbol_MySketch_38">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_15_60" to="line_15_64">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_15_57" to="line_15_60">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_15_60" to="symbol_$bang$bang_61">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="symbol_$bang$bang_61" to="symbol_AngelicSketch_59">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_synthAssert_80">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>synthAssert</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch.synthAssert</string>
			</attr>
		</node>
		<edge from="symbol_synthAssert_80" to="symbol_synthAssert_80">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_16_79">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>28</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>28</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.synthAssert(v2.a().==(4))</string>
			</attr>
		</node>
		<edge from="line_16_79" to="symbol_Unit_45">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_16_79" to="line_16_81">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_16_88">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_16_88" to="symbol_MySketch_38">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_16_88" to="symbol_MySketch_38">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_16_79" to="line_16_88">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_16_67" to="line_16_79">
			<type xlink:href="#IfThen"/>
		</edge>
		<edge from="line_16_79" to="symbol_synthAssert_80">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="symbol_synthAssert_80" to="symbol_AngelicSketch_59">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_&lt;init&gt;_95">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch.&lt;init&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;init&gt;_95" to="symbol_&lt;init&gt;_95">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_7_94">
			<type xlink:href="#FcnSuperCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.super.this()</string>
			</attr>
		</node>
		<edge from="line_7_94" to="symbol_AngelicSketch_59">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_96">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_7_94" to="empty_chain_96">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_7_93">
			<type xlink:href="#Block"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>{
  MySketch.super.this();
  ()
}</string>
			</attr>
		</node>
		<edge from="line_7_93" to="symbol_Unit_45">
			<type xlink:href="#BlockTypeSymbol"/>
		</edge>
		<node id="line_7_97">
			<type xlink:href="#UnitConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>()</string>
			</attr>
		</node>
		<edge from="line_7_97" to="symbol_Unit_45">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_7_93" to="line_7_97">
			<type xlink:href="#BlockExpr"/>
		</edge>
		<node id="line_7_91">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>def this(): angelic.simple.MySketch = {
  MySketch.super.this();
  ()
}</string>
			</attr>
		</node>
		<node id="symbol_&lt;init&gt;_92">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.&lt;init&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;init&gt;_92" to="symbol_MySketch_38">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_92" to="symbol_&lt;init&gt;_92">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_7_91" to="symbol_&lt;init&gt;_92">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="empty_chain_98">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_7_91" to="empty_chain_98">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_7_40" to="line_7_91">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_7_91" to="line_7_93">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_7_93" to="line_7_94">
			<type xlink:href="#BlockStmtChain"/>
		</edge>
		<edge from="line_7_94" to="symbol_&lt;init&gt;_95">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_95" to="symbol_AngelicSketch_59">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_resolve_58" to="symbol_AngelicSketch_59">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_resolve_58" to="symbol_resolve_58">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_15_57" to="symbol_resolve_58">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_15_57" to="symbol_Object_52">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_15_65">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>15</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>15</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_15_65" to="symbol_MySketch_38">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_15_65" to="symbol_MySketch_38">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_15_57" to="line_15_65">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_15_56" to="line_15_57">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<edge from="line_15_50" to="line_15_56">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<node id="line_15_66">
			<type xlink:href="#TypeTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>15</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>15</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>angelic.simple.MySketch$MyValue</string>
			</attr>
		</node>
		<edge from="line_15_66" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#TypeTreeSymbol"/>
		</edge>
		<edge from="line_15_66" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#TypeTreeTypeSymbol"/>
		</edge>
		<edge from="line_15_50" to="line_15_66">
			<type xlink:href="#FcnCallTypeArgsChain"/>
		</edge>
		<node id="line_15_49">
			<type xlink:href="#Typed"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>15</int>
			</attr>
			<attr name="startCol">
				<int>21</int>
			</attr>
			<attr name="endLine">
				<int>15</int>
			</attr>
			<attr name="endCol">
				<int>21</int>
			</attr>
			<attr name="scalaSource">
				<string>(MySketch.this.resolve(MySketch.this.!!()).$asInstanceOf[angelic.simple.MySketch$MyValue](): angelic.simple.MySketch$MyValue)</string>
			</attr>
		</node>
		<edge from="line_15_49" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#TypedTypeSymbol"/>
		</edge>
		<edge from="line_15_49" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#TypedTypeSymbol"/>
		</edge>
		<node id="line_15_46">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>15</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>15</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>val v2: angelic.simple.MySketch$MyValue = (MySketch.this.resolve(MySketch.this.!!()).$asInstanceOf[angelic.simple.MySketch$MyValue](): angelic.simple.MySketch$MyValue)</string>
			</attr>
		</node>
		<edge from="line_15_46" to="symbol_v2_47">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<edge from="line_14_44" to="line_15_46">
			<type xlink:href="#BlockStmtChain"/>
		</edge>
		<edge from="line_15_46" to="line_15_49">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_15_49" to="line_15_50">
			<type xlink:href="#TypedExpression"/>
		</edge>
		<edge from="line_15_50" to="symbol_$asInstanceOf_51">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="symbol_$asInstanceOf_51" to="symbol_Object_52">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_8_142">
			<type xlink:href="#NullTypeConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>null</string>
			</attr>
		</node>
		<edge from="line_8_140" to="line_8_142">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_8_142" to="symbol_Object_52">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="symbol_eq_141" to="symbol_Object_52">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_eq_141" to="symbol_eq_141">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_8_140" to="symbol_eq_141">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_8_140" to="symbol_Boolean_71">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_8_143">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>$outer</string>
			</attr>
		</node>
		<edge from="line_8_143" to="symbol_$outer_144">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_8_143" to="symbol_MySketch_38">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_8_140" to="line_8_143">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_8_139" to="line_8_140">
			<type xlink:href="#IfCond"/>
		</edge>
		<edge from="line_8_139" to="line_8_151">
			<type xlink:href="#IfElse"/>
		</edge>
		<edge from="line_9_134" to="line_8_139">
			<type xlink:href="#BlockStmtNext"/>
		</edge>
		<edge from="line_9_134" to="line_9_137">
			<type xlink:href="#AssignRhs"/>
		</edge>
		<edge from="line_9_137" to="symbol_c_138">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_9_163" to="symbol_c_138">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_164">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_9_163" to="line_0_164">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_8_161" to="line_9_163">
			<type xlink:href="#FcnDefParamsNext"/>
		</edge>
		<edge from="line_8_161" to="symbol_a_133">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<edge from="line_8_132" to="symbol_a_133">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_8_132" to="symbol_Int_13">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_8_129" to="line_8_132">
			<type xlink:href="#AssignRhs"/>
		</edge>
		<edge from="line_8_128" to="line_8_129">
			<type xlink:href="#BlockStmtChain"/>
		</edge>
		<node id="line_8_158">
			<type xlink:href="#UnitConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>18</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>18</int>
			</attr>
			<attr name="scalaSource">
				<string>()</string>
			</attr>
		</node>
		<edge from="line_8_158" to="symbol_Unit_45">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_8_128" to="line_8_158">
			<type xlink:href="#BlockExpr"/>
		</edge>
		<edge from="line_8_126" to="line_8_128">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_8_101" to="line_8_126">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_8_126" to="symbol_&lt;init&gt;_127">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<edge from="symbol_$outer_144" to="symbol_&lt;init&gt;_127">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_8_154" to="symbol_$outer_144">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_8_154" to="symbol_MySketch_38">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_8_151" to="line_8_154">
			<type xlink:href="#AssignRhs"/>
		</edge>
		<edge from="line_8_151" to="line_8_152">
			<type xlink:href="#AssignLhs"/>
		</edge>
		<edge from="line_8_152" to="symbol_$outer _119">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<node id="line_8_99">
			<type xlink:href="#ClassDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>11</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>11</int>
			</attr>
			<attr name="scalaSource">
				<string>class MySketch$MyValue extends java.lang.Object with ScalaObject {
  &lt;paramaccessor&gt; private[this] val a: Int = _;
  &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def a(): Int = MySketch$MyValue.this.a;
  &lt;paramaccessor&gt; private[this] val c: Int = _;
  &lt;stable&gt; &lt;accessor&gt; &lt;paramaccessor&gt; def c(): Int = MySketch$MyValue.this.c;
  protected &lt;synthetic&gt; &lt;paramaccessor&gt; val $outer: angelic.simple.MySketch = _;
  &lt;synthetic&gt; &lt;stable&gt; def angelic$simple$MySketch$MyValue$$$outer(): angelic.simple.MySketch = MySketch$MyValue.this.$outer;
  def this($outer: angelic.simple.MySketch, a: Int, c: Int): angelic.simple.MySketch$MyValue = {
    MySketch$MyValue.this.a = a;
    MySketch$MyValue.this.c = c;
    if ($outer.eq(null))
      throw new java.lang.NullPointerException()
    else
      MySketch$MyValue.this.$outer = $outer;
    MySketch$MyValue.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<edge from="line_8_99" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ClassDefSymbol"/>
		</edge>
		<node id="empty_chain_100">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_8_99" to="empty_chain_100">
			<type xlink:href="#ClassDefTypeParamsChain"/>
		</edge>
		<edge from="line_8_99" to="line_8_101">
			<type xlink:href="#ClassDefImpl"/>
		</edge>
		<edge from="line_8_99" to="symbol_a _104">
			<type xlink:href="#ClassDefFieldSymbol"/>
		</edge>
		<edge from="line_8_99" to="symbol_c _111">
			<type xlink:href="#ClassDefFieldSymbol"/>
		</edge>
		<edge from="line_1_33" to="line_8_99">
			<type xlink:href="#PackageDefElement"/>
		</edge>
		<edge from="line_8_99" to="symbol_$outer _119">
			<type xlink:href="#ClassDefFieldSymbol"/>
		</edge>
		<edge from="line_8_118" to="symbol_$outer _119">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_120">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_8_118" to="line_0_120">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_8_101" to="line_8_118">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_8_101" to="line_8_103">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_8_103" to="symbol_a _104">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<edge from="line_8_107" to="symbol_a _104">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_8_107" to="symbol_Int_13">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_8_108">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>8</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>8</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch$MyValue.this</string>
			</attr>
		</node>
		<edge from="line_8_108" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_8_108" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_8_107" to="line_8_108">
			<type xlink:href="#FieldAccessObject"/>
		</edge>
		<edge from="line_8_106" to="line_8_107">
			<type xlink:href="#FcnBody"/>
		</edge>
		<node id="empty_chain_109">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_8_106" to="empty_chain_109">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_8_106" to="symbol_a_85">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<edge from="line_16_84" to="symbol_a_85">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_16_84" to="symbol_Int_13">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_86">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_16_84" to="empty_chain_86">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_16_87">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>29</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>29</int>
			</attr>
			<attr name="scalaSource">
				<string>v2</string>
			</attr>
		</node>
		<edge from="line_16_87" to="symbol_v2_47">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_16_87" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_16_84" to="line_16_87">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_16_81" to="line_16_84">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_16_81" to="symbol_Boolean_71">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_16_68" to="symbol_Boolean_71">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_16_67" to="line_16_68">
			<type xlink:href="#IfCond"/>
		</edge>
		<node id="line_16_89">
			<type xlink:href="#UnitConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>9</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>9</int>
			</attr>
			<attr name="scalaSource">
				<string>()</string>
			</attr>
		</node>
		<edge from="line_16_89" to="symbol_Unit_45">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_16_67" to="line_16_89">
			<type xlink:href="#IfElse"/>
		</edge>
		<edge from="line_14_44" to="line_16_67">
			<type xlink:href="#BlockExpr"/>
		</edge>
		<edge from="line_16_67" to="symbol_Unit_45">
			<type xlink:href="#IfTypeSymbol"/>
		</edge>
		<edge from="line_14_44" to="symbol_Unit_45">
			<type xlink:href="#BlockTypeSymbol"/>
		</edge>
		<edge from="line_14_42" to="line_14_44">
			<type xlink:href="#FcnBody"/>
		</edge>
		<node id="empty_chain_90">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_14_42" to="empty_chain_90">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_7_40" to="line_14_42">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_7_37" to="line_7_40">
			<type xlink:href="#ClassDefImpl"/>
		</edge>
		<edge from="line_1_33" to="line_7_37">
			<type xlink:href="#PackageDefElement"/>
		</edge>
		<edge from="line_7_37" to="symbol_MySketch_38">
			<type xlink:href="#ClassDefSymbol"/>
		</edge>
		<edge from="symbol_main_43" to="symbol_MySketch_38">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_main_43" to="symbol_main_43">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="symbol_v2_47" to="symbol_main_43">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_v2_47" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_c _111" to="symbol_MySketch$MyValue_48">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_c _111" to="annot_20">
			<type xlink:href="#SymbolAnnotation"/>
		</edge>
		<edge from="annot_20" to="line_9_21">
			<type xlink:href="#AnnotationArgsChain"/>
		</edge>
		<edge from="line_9_21" to="line_9_27">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_9_28">
			<type xlink:href="#IntConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>37</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>37</int>
			</attr>
			<attr name="scalaSource">
				<string>5</string>
			</attr>
			<attr name="value">
				<int>5</int>
			</attr>
		</node>
		<edge from="line_9_28" to="symbol_Int_13">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_9_27" to="line_9_28">
			<type xlink:href="#FcnArgNext"/>
		</edge>
		<edge from="line_9_27" to="symbol_Int_13">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="symbol_Int_13" to="symbol_scala_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_runtime_9" to="symbol_scala_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_RichInt$&lt;refinement&gt;_11">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>RichInt$&lt;refinement&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.runtime.RichInt$&lt;refinement&gt;</string>
			</attr>
		</node>
		<edge from="symbol_RichInt$&lt;refinement&gt;_11" to="symbol_RichInt$&lt;refinement&gt;_11">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="line_8_6" to="symbol_RichInt$&lt;refinement&gt;_11">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="symbol_RichInt$&lt;refinement&gt;_11" to="symbol_runtime_9">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_RichInt_8" to="symbol_runtime_9">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_to_7" to="symbol_RichInt_8">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_to_7" to="symbol_to_7">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_8_6" to="symbol_to_7">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="annot_1" to="line_8_6">
			<type xlink:href="#AnnotationArgsChain"/>
		</edge>
		<edge from="annot_1" to="symbol_AngelicSketch$Range_2">
			<type xlink:href="#AnnotationSymbol"/>
		</edge>
		<edge from="symbol_AngelicSketch$Range_2" to="symbol_skalch_3">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_skalch_3" to="symbol_&lt;root&gt;_4">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_angelic_36" to="symbol_&lt;root&gt;_4">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_simple_34" to="symbol_angelic_36">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_simple_35" to="symbol_angelic_36">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_simple_34" to="symbol_simple_35">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="line_1_33" to="symbol_simple_34">
			<type xlink:href="#PackageDefSymbol"/>
		</edge>
	</graph>
</gxl>
