<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gxl SYSTEM "http://www.gupro.de/GXL/gxl-1.0.dtd">
<gxl xmlns:xlink="http://www.w3.org/1999/xlink">
	<graph id="SCE_ScalaAstModel">
		<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#gxl-1.0"/>
		<node id="ScalaAstModel">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#GraphClass"/>
			<attr name="name">
				<string>ScalaAstModel</string>
			</attr>
		</node>
		<node id="DM_bool">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#Bool"/>
		</node>
		<node id="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#Int"/>
		</node>
		<node id="DM_float">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#Float"/>
		</node>
		<node id="DM_double">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#Float"/>
		</node>
		<node id="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#String"/>
		</node>
		<node id="NAT_ScAstNode_sourceFile">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>sourceFile</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_sourceFile" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_ScAstNode_scalaSource">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>scalaSource</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_scalaSource" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_ScAstNode_startLine">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>startLine</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_startLine" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_ScAstNode_startCol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>startCol</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_startCol" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_ScAstNode_endLine">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>endLine</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_endLine" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_ScAstNode_endCol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>endCol</string>
			</attr>
		</node>
		<edge from="NAT_ScAstNode_endCol" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_Symbol_symbolName">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>symbolName</string>
			</attr>
		</node>
		<edge from="NAT_Symbol_symbolName" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_Symbol_fullSymbolName">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>fullSymbolName</string>
			</attr>
		</node>
		<edge from="NAT_Symbol_fullSymbolName" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_BooleanConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>value</string>
			</attr>
		</node>
		<edge from="NAT_BooleanConstant_value" to="DM_bool">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_CharConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>value</string>
			</attr>
		</node>
		<edge from="NAT_CharConstant_value" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_LongConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>value</string>
			</attr>
		</node>
		<edge from="NAT_LongConstant_value" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_IntConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>value</string>
			</attr>
		</node>
		<edge from="NAT_IntConstant_value" to="DM_int">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="NAT_StringConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#AttributeClass"/>
			<attr name="name">
				<string>value</string>
			</attr>
		</node>
		<edge from="NAT_StringConstant_value" to="DM_string">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasDomain"/>
		</edge>
		<node id="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Node</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ScAstNode" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Symbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="EmptyChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Annotation" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockifySafe" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SKRoot" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SKHelperFcns" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ScAstNode</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScAstNode" to="NAT_ScAstNode_sourceFile">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScAstNode" to="NAT_ScAstNode_scalaSource">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScAstNode" to="NAT_ScAstNode_startLine">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScAstNode" to="NAT_ScAstNode_startCol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScAstNode" to="NAT_ScAstNode_endLine">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScAstNode" to="NAT_ScAstNode_endCol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SketchConstructCall" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ValDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="VarRef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SKAssert" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SKBlock" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ScalaExprStmt" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Assign" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CaseDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="EmptyTree" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCall" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FieldAccess" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="NewArray" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="PackageDef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="QualifiedClassRef" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Return" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Template" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="This" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Throw" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Typed" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Constant" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="GotoCall" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Bind" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Match" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypeTree" to="ScAstNode">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Symbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="Symbol" to="NAT_Symbol_symbolName">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="Symbol" to="NAT_Symbol_fullSymbolName">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SketchBaseSymbol" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="OuterSymbol" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ScalaUnboxSymbol" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ScalaSymbol" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="InsertedReturnSymbol" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TmpSymbol" to="Symbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="EmptyChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>EmptyChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="EmptyChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Annotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Annotation</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Annotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SketchAnnotation" to="Annotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IgnoreClassAnnotation" to="Annotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SketchBaseSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AngelicSketchSymbol" to="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AssertFcnSymbol" to="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SketchConstructSymbol" to="SketchBaseSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="AngelicSketchSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>AngelicSketchSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AngelicSketchSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="AssertFcnSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>AssertFcnSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AssertFcnSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SketchConstructSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SketchConstructSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SketchConstructSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BangBangSymbol" to="SketchConstructSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="HoleSymbol" to="SketchConstructSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="BangBangSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>BangBangSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BangBangSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="HoleSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>HoleSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="HoleSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SketchConstructCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SketchConstructCall</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SketchConstructCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BangBangCall" to="SketchConstructCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="HoleCall" to="SketchConstructCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="BangBangCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>BangBangCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BangBangCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="HoleCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>HoleCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="HoleCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SketchAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SketchAnnotation</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SketchAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="StaticSketchAnnotation" to="SketchAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="StaticSketchAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>StaticSketchAnnotation</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="StaticSketchAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="IgnoreClassAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>IgnoreClassAnnotation</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="IgnoreClassAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="OuterSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>OuterSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="OuterSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="ScalaUnboxSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ScalaUnboxSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ScalaUnboxSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="ScalaSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ScalaSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ScalaSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="BlockifySafe">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>BlockifySafe</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockifySafe">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TmpVarRef" to="BlockifySafe">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Constant" to="BlockifySafe">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="MemberFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>MemberFcn</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="MemberFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="InsertedReturnSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>InsertedReturnSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="InsertedReturnSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="BlockifyValDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>BlockifyValDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockifyValDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="TmpVarRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>TmpVarRef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TmpVarRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SKRoot">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SKRoot</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SKRoot">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SKHelperFcns">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SKHelperFcns</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SKHelperFcns">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SKAssert">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SKAssert</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SKAssert">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="SKBlock">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>SKBlock</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SKBlock">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="TmpSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>TmpSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TmpSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="ConstructAssignableClassDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ConstructAssignableClassDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ConstructAssignableClassDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="ScalaExprStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ScalaExprStmt</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ScalaExprStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="Block" to="ScalaExprStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="If" to="ScalaExprStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Try" to="ScalaExprStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="LabelDef" to="ScalaExprStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="Assign">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Assign</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Assign">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Block">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Block</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Block">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="CaseDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>CaseDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CaseDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="ClassDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ClassDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ConstructAssignableClassDef" to="ClassDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="EmptyTree">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>EmptyTree</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="EmptyTree">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnCallArrayLength" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryDivide" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryLessThan" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryPrimitiveEquals" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinarySameObj" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinarySubtract" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallTypeApply" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallUnaryNonzero" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnSuperCall" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="NewConstructor" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="StaticFcnCall" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryAdd" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryLogicAnd" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallArrayGet" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryLogicOr" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallUnaryIntCast" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryGreaterThan" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryLessThanOrEqual" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallArraySet" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryPrimitiveNotEquals" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryStringConcat" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryNotSameObj" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="NewArrayCall" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallBinaryGreaterThanOrEqual" to="FcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="FcnCallArrayLength">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallArrayLength</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallArrayLength">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryDivide">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryDivide</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryDivide">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryLessThan">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryLessThan</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryLessThan">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryPrimitiveEquals">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryPrimitiveEquals</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryPrimitiveEquals">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinarySameObj">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinarySameObj</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinarySameObj">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinarySubtract">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinarySubtract</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinarySubtract">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallTypeApply">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallTypeApply</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallTypeApply">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallUnaryNonzero">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallUnaryNonzero</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallUnaryNonzero">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="MemberFcn" to="FcnDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="FcnSuperCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnSuperCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnSuperCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FieldAccess">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FieldAccess</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FieldAccess">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="If">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>If</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="If">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="NewArray">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>NewArray</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="NewArray">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="NewConstructor">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>NewConstructor</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="NewConstructor">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="PackageDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>PackageDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="PackageDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="QualifiedClassRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>QualifiedClassRef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="QualifiedClassRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Return">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Return</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Return">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="StaticFcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>StaticFcnCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="StaticFcnCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Template">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Template</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Template">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="This">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>This</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="This">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Throw">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Throw</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Throw">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Try">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Try</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Try">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Typed">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Typed</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Typed">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="ValDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>ValDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ValDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockifyValDef" to="ValDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="VarRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>VarRef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="VarRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TmpVarRef" to="VarRef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Constant</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BooleanConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CharConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="LongConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IntConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="StringConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="NullTypeConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="UnitConstant" to="Constant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<node id="BooleanConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>BooleanConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="BooleanConstant" to="NAT_BooleanConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="BooleanConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="CharConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>CharConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="CharConstant" to="NAT_CharConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="CharConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="LongConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>LongConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="LongConstant" to="NAT_LongConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="LongConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="IntConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>IntConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="IntConstant" to="NAT_IntConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="IntConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="StringConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>StringConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="StringConstant" to="NAT_StringConstant_value">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#hasAttribute"/>
		</edge>
		<edge from="ScalaAstModel" to="StringConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="NullTypeConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>NullTypeConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="NullTypeConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="UnitConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>UnitConstant</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="UnitConstant">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryAdd">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryAdd</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryAdd">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryLogicAnd">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryLogicAnd</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryLogicAnd">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallArrayGet">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallArrayGet</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallArrayGet">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryLogicOr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryLogicOr</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryLogicOr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallUnaryIntCast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallUnaryIntCast</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallUnaryIntCast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryGreaterThan">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryGreaterThan</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryGreaterThan">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryLessThanOrEqual">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryLessThanOrEqual</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryLessThanOrEqual">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallArraySet">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallArraySet</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallArraySet">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryPrimitiveNotEquals">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryPrimitiveNotEquals</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryPrimitiveNotEquals">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="GotoCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>GotoCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="GotoCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryStringConcat">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryStringConcat</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryStringConcat">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryNotSameObj">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryNotSameObj</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryNotSameObj">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Bind">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Bind</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Bind">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="NewArrayCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>NewArrayCall</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="NewArrayCall">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="Match">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>Match</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Match">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="LabelDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>LabelDef</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="LabelDef">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="FcnCallBinaryGreaterThanOrEqual">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>FcnCallBinaryGreaterThanOrEqual</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallBinaryGreaterThanOrEqual">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="TypeTree">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#NodeClass"/>
			<attr name="name">
				<string>TypeTree</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypeTree">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<node id="AEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AEdge</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
			<attr name="isdirected">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="Edge" to="AEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="UEdge" to="AEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AEdge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AEdge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>Edge</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SymbolOwner" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="EnclosingFcn" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BridgeFcn" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CanBeConstructAssigned" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockifyLink" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SKAssertExpr" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnArg" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockStmt" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AnnotationArgsChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AnnotationArgsNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AnnotationSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ArrValueChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ArrValueNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AssignLhs" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AssignRhs" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AssignTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockExpr" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CaseBody" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CaseGuard" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="CasePattern" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefFieldSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefImpl" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefTypeParamsChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefTypeParamsNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassDefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassRefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassRefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClsMethod" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="EmptyTreeTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnBody" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallTypeArgsChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnCallTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDefParamsChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDefParamsNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnTarget" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FieldAccessObject" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IfCond" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IfElse" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IfThen" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="IfTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="LabelDefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="LiteralTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="MatchCaseChain" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="MatchCaseNext" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="MatchTarget" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="NewClassSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="PackageDefElement" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="PackageDefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="PackageDefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ReturnExpr" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ReturnSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="StaticMember" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="SymbolAnnotation" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TemplateElement" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TemplateSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TemplateTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ThisSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ThisTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ThrowExpr" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ThrowTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypedExpression" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypedTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypeTreeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypeTreeTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ValDefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ValDefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ValDefRhs" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="VarRefSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="VarRefTypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="ClassRefTermSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="TypeSymbol" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnArgLast" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnDefParamsLast" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockStmtLast" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="AnnotationArgsLast" to="Edge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="Edge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="Edge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="UEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>UEdge</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>false</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="UEdge">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="UEdge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="UEdge" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="SymbolOwner">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>SymbolOwner</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SymbolOwner">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SymbolOwner" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="SymbolOwner" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="EnclosingFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>EnclosingFcn</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="EnclosingFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="EnclosingFcn" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="EnclosingFcn" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BridgeFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BridgeFcn</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BridgeFcn">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BridgeFcn" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BridgeFcn" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="CanBeConstructAssigned">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>CanBeConstructAssigned</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CanBeConstructAssigned">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="CanBeConstructAssigned" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="CanBeConstructAssigned" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockifyLink">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockifyLink</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockifyLink">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockifySubtreeInner" to="BlockifyLink">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockifyNext" to="BlockifyLink">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockifyLink" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockifyLink" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockifySubtreeInner">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockifySubtreeInner</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockifySubtreeInner">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockifySubtreeInner" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockifySubtreeInner" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockifyNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockifyNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockifyNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockifyNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockifyNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="SKAssertExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>SKAssertExpr</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SKAssertExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SKAssertExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="SKAssertExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnArg">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnArg</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnArg">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnArgChain" to="FcnArg">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnArgNext" to="FcnArg">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="FcnArg" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnArg" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockStmt</string>
			</attr>
			<attr name="isabstract">
				<bool>true</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockStmtChain" to="BlockStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockStmtNext" to="BlockStmt">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#isA"/>
		</edge>
		<edge from="BlockStmt" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockStmt" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AnnotationArgsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AnnotationArgsChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AnnotationArgsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AnnotationArgsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AnnotationArgsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AnnotationArgsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AnnotationArgsNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AnnotationArgsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AnnotationArgsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AnnotationArgsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AnnotationSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AnnotationSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AnnotationSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AnnotationSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AnnotationSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ArrValueChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ArrValueChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ArrValueChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ArrValueChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ArrValueChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ArrValueNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ArrValueNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ArrValueNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ArrValueNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ArrValueNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AssignLhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AssignLhs</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AssignLhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AssignLhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AssignLhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AssignRhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AssignRhs</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AssignRhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AssignRhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AssignRhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AssignTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AssignTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AssignTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AssignTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AssignTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockExpr</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockStmtChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockStmtChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockStmtChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockStmtChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockStmtChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockStmtNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockStmtNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockStmtNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockStmtNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockStmtNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="CaseBody">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>CaseBody</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CaseBody">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="CaseBody" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="CaseBody" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="CaseGuard">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>CaseGuard</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CaseGuard">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="CaseGuard" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="CaseGuard" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="CasePattern">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>CasePattern</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="CasePattern">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="CasePattern" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="CasePattern" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefFieldSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefFieldSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefFieldSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefFieldSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefFieldSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefImpl">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefImpl</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefImpl">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefImpl" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefImpl" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefTypeParamsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefTypeParamsChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefTypeParamsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefTypeParamsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefTypeParamsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefTypeParamsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefTypeParamsNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefTypeParamsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefTypeParamsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefTypeParamsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassDefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassRefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassRefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassRefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassRefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassRefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassRefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassRefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassRefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassRefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassRefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClsMethod">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClsMethod</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClsMethod">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClsMethod" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClsMethod" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="EmptyTreeTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>EmptyTreeTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="EmptyTreeTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="EmptyTreeTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="EmptyTreeTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnArgChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnArgChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnArgChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnArgChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnArgChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnArgNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnArgNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnArgNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnArgNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnArgNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnBody">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnBody</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnBody">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnBody" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnBody" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnCallSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnCallSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnCallSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnCallSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnCallTypeArgsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnCallTypeArgsChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallTypeArgsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnCallTypeArgsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnCallTypeArgsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnCallTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnCallTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnCallTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnCallTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnCallTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnDefParamsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnDefParamsChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDefParamsChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnDefParamsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnDefParamsChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnDefParamsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnDefParamsNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDefParamsNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnDefParamsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnDefParamsNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnDefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnDefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnTarget">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnTarget</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnTarget">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnTarget" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnTarget" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FieldAccessObject">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FieldAccessObject</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FieldAccessObject">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FieldAccessObject" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FieldAccessObject" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="IfCond">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>IfCond</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="IfCond">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="IfCond" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="IfCond" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="IfElse">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>IfElse</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="IfElse">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="IfElse" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="IfElse" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="IfThen">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>IfThen</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="IfThen">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="IfThen" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="IfThen" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="IfTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>IfTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="IfTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="IfTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="IfTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="LabelDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>LabelDefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="LabelDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="LabelDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="LabelDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="LiteralTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>LiteralTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="LiteralTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="LiteralTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="LiteralTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="MatchCaseChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>MatchCaseChain</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="MatchCaseChain">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="MatchCaseChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="MatchCaseChain" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="MatchCaseNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>MatchCaseNext</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="MatchCaseNext">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="MatchCaseNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="MatchCaseNext" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="MatchTarget">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>MatchTarget</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="MatchTarget">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="MatchTarget" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="MatchTarget" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="NewClassSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>NewClassSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="NewClassSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="NewClassSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="NewClassSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="PackageDefElement">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>PackageDefElement</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="PackageDefElement">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="PackageDefElement" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="PackageDefElement" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="PackageDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>PackageDefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="PackageDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="PackageDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="PackageDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="PackageDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>PackageDefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="PackageDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="PackageDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="PackageDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ReturnExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ReturnExpr</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ReturnExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ReturnExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ReturnExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ReturnSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ReturnSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ReturnSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ReturnSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ReturnSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="StaticMember">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>StaticMember</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="StaticMember">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="StaticMember" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="StaticMember" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="SymbolAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>SymbolAnnotation</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="SymbolAnnotation">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="SymbolAnnotation" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="SymbolAnnotation" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TemplateElement">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TemplateElement</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TemplateElement">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TemplateElement" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TemplateElement" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TemplateSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TemplateSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TemplateSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TemplateSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TemplateSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TemplateTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TemplateTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TemplateTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TemplateTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TemplateTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ThisSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ThisSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ThisSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ThisSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ThisSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ThisTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ThisTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ThisTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ThisTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ThisTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ThrowExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ThrowExpr</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ThrowExpr">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ThrowExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ThrowExpr" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ThrowTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ThrowTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ThrowTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ThrowTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ThrowTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TypedExpression">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TypedExpression</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypedExpression">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TypedExpression" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TypedExpression" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TypedTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TypedTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypedTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TypedTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TypedTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TypeTreeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TypeTreeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypeTreeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TypeTreeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TypeTreeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TypeTreeTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TypeTreeTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypeTreeTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TypeTreeTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TypeTreeTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ValDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ValDefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ValDefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ValDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ValDefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ValDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ValDefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ValDefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ValDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ValDefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ValDefRhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ValDefRhs</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ValDefRhs">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ValDefRhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ValDefRhs" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="VarRefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>VarRefSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="VarRefSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="VarRefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="VarRefSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="VarRefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>VarRefTypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="VarRefTypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="VarRefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="VarRefTypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="ClassRefTermSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>ClassRefTermSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="ClassRefTermSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="ClassRefTermSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="ClassRefTermSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="TypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>TypeSymbol</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="TypeSymbol">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="TypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="TypeSymbol" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnArgLast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnArgLast</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnArgLast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnArgLast" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnArgLast" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="FcnDefParamsLast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>FcnDefParamsLast</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="FcnDefParamsLast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="FcnDefParamsLast" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="FcnDefParamsLast" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="BlockStmtLast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>BlockStmtLast</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="BlockStmtLast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="BlockStmtLast" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="BlockStmtLast" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<node id="AnnotationArgsLast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#EdgeClass"/>
			<attr name="name">
				<string>AnnotationArgsLast</string>
			</attr>
			<attr name="isabstract">
				<bool>false</bool>
			</attr>
			<attr name="isdirected">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="ScalaAstModel" to="AnnotationArgsLast">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#contains"/>
		</edge>
		<edge from="AnnotationArgsLast" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#from"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
		<edge from="AnnotationArgsLast" to="Node">
			<type xlink:href="http://www.gupro.de/GXL/gxl-1.0.gxl#to"/>
			<attr name="limits">
				<tup/>
			</attr>
			<attr name="isordered">
				<bool>false</bool>
			</attr>
		</edge>
	</graph>
	<graph edgeids="true" edgemode="defaultdirected" id="DefaultGraph">
		<type xlink:href="#ScalaAstModel"/>
		<node id="line_1_7">
			<type xlink:href="#PackageDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>1</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>1</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>package angelic.simple {
  class MySketch extends skalch.AngelicSketch with ScalaObject {
    def annoyance(x: Boolean): Boolean = x;
    def annoyance2(v1: Int, v2: Int, v3: Int, z: Int, x: Boolean, y: Boolean): Boolean = x;
    def main(): Unit = {
      var x: Int = 3;
      MySketch.this.synthAssert(MySketch.this.annoyance(MySketch.this.annoyance(MySketch.this.annoyance2(x, 3334, (scala.Int.unbox(MySketch.this._resolve(MySketch.this.??())): Int), {
        x = x.+(1);
        0
      }, if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
        true
      else
        scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())), if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
        true
      else
        scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))))))
    };
    def this(): angelic.simple.MySketch = {
      MySketch.super.this();
      ()
    }
  };
  @skalch.SkalchIgnoreClass 
  class IrrelevantClass extends java.lang.Object with ScalaObject {
    def myirrelevantfunction(): Unit = scala.this.Predef.println("hello");
    def this(): angelic.simple.IrrelevantClass = {
      IrrelevantClass.super.this();
      ()
    }
  }
}</string>
			</attr>
		</node>
		<node id="symbol_simple_8">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>simple</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple</string>
			</attr>
		</node>
		<node id="symbol_simple_9">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>simple</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple</string>
			</attr>
		</node>
		<edge from="symbol_simple_9" to="symbol_simple_9">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_angelic_10">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>angelic</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic</string>
			</attr>
		</node>
		<edge from="symbol_angelic_10" to="symbol_angelic_10">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_&lt;root&gt;_4">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;root&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>package &lt;root&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;root&gt;_4" to="symbol_&lt;root&gt;_4">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_&lt;none&gt;_5">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;none&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>&lt;none&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;root&gt;_4" to="symbol_&lt;none&gt;_5">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_skalch_3">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>skalch</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch</string>
			</attr>
		</node>
		<edge from="symbol_skalch_3" to="symbol_skalch_3">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_SkalchIgnoreClass_2">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>SkalchIgnoreClass</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.SkalchIgnoreClass</string>
			</attr>
		</node>
		<edge from="symbol_SkalchIgnoreClass_2" to="symbol_SkalchIgnoreClass_2">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="annot_1">
			<type xlink:href="#Annotation"/>
		</node>
		<node id="empty_chain_6">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="annot_1" to="empty_chain_6">
			<type xlink:href="#AnnotationArgsChain"/>
		</edge>
		<node id="symbol_IrrelevantClass_138">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>IrrelevantClass</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.IrrelevantClass</string>
			</attr>
		</node>
		<edge from="symbol_IrrelevantClass_138" to="symbol_IrrelevantClass_138">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_IrrelevantClass_138" to="symbol_simple_9">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_24_137">
			<type xlink:href="#ClassDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>24</int>
			</attr>
			<attr name="startCol">
				<int>7</int>
			</attr>
			<attr name="endLine">
				<int>24</int>
			</attr>
			<attr name="endCol">
				<int>7</int>
			</attr>
			<attr name="scalaSource">
				<string>@skalch.SkalchIgnoreClass 
class IrrelevantClass extends java.lang.Object with ScalaObject {
  def myirrelevantfunction(): Unit = scala.this.Predef.println("hello");
  def this(): angelic.simple.IrrelevantClass = {
    IrrelevantClass.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="empty_chain_139">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_24_137" to="empty_chain_139">
			<type xlink:href="#ClassDefTypeParamsChain"/>
		</edge>
		<node id="line_24_140">
			<type xlink:href="#Template"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>24</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>24</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>java.lang.Object with ScalaObject {
  def myirrelevantfunction(): Unit = scala.this.Predef.println("hello");
  def this(): angelic.simple.IrrelevantClass = {
    IrrelevantClass.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="symbol_&lt;local IrrelevantClass&gt;_141">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;local IrrelevantClass&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.IrrelevantClass.&lt;local IrrelevantClass&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;local IrrelevantClass&gt;_141" to="symbol_IrrelevantClass_138">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_24_140" to="symbol_&lt;local IrrelevantClass&gt;_141">
			<type xlink:href="#TemplateSymbol"/>
		</edge>
		<edge from="line_24_140" to="symbol_IrrelevantClass_138">
			<type xlink:href="#TemplateTypeSymbol"/>
		</edge>
		<node id="line_25_142">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>25</int>
			</attr>
			<attr name="startCol">
				<int>9</int>
			</attr>
			<attr name="endLine">
				<int>25</int>
			</attr>
			<attr name="endCol">
				<int>9</int>
			</attr>
			<attr name="scalaSource">
				<string>def myirrelevantfunction(): Unit = scala.this.Predef.println("hello")</string>
			</attr>
		</node>
		<node id="symbol_myirrelevantfunction_143">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>myirrelevantfunction</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.IrrelevantClass.myirrelevantfunction</string>
			</attr>
		</node>
		<edge from="symbol_myirrelevantfunction_143" to="symbol_IrrelevantClass_138">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_myirrelevantfunction_143" to="symbol_myirrelevantfunction_143">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_25_142" to="symbol_myirrelevantfunction_143">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="line_26_144">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>26</int>
			</attr>
			<attr name="startCol">
				<int>16</int>
			</attr>
			<attr name="endLine">
				<int>26</int>
			</attr>
			<attr name="endCol">
				<int>16</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.this.Predef.println("hello")</string>
			</attr>
		</node>
		<node id="symbol_println_145">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>println</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Predef.println</string>
			</attr>
		</node>
		<node id="symbol_Predef_146">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Predef</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Predef</string>
			</attr>
		</node>
		<edge from="symbol_Predef_146" to="symbol_Predef_146">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_scala_21">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>scala</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala</string>
			</attr>
		</node>
		<edge from="symbol_scala_21" to="symbol_scala_21">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_scala_21" to="symbol_&lt;root&gt;_4">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_Boolean_20">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Boolean</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="symbol_Boolean_20" to="symbol_Boolean_20">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_x_19">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>x</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.x</string>
			</attr>
		</node>
		<node id="symbol_annoyance_17">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>annoyance</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.annoyance</string>
			</attr>
		</node>
		<node id="symbol_MySketch_12">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>MySketch</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch</string>
			</attr>
		</node>
		<edge from="symbol_MySketch_12" to="symbol_MySketch_12">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_MySketch_12" to="symbol_simple_9">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_7_11">
			<type xlink:href="#ClassDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>7</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>7</int>
			</attr>
			<attr name="scalaSource">
				<string>class MySketch extends skalch.AngelicSketch with ScalaObject {
  def annoyance(x: Boolean): Boolean = x;
  def annoyance2(v1: Int, v2: Int, v3: Int, z: Int, x: Boolean, y: Boolean): Boolean = x;
  def main(): Unit = {
    var x: Int = 3;
    MySketch.this.synthAssert(MySketch.this.annoyance(MySketch.this.annoyance(MySketch.this.annoyance2(x, 3334, (scala.Int.unbox(MySketch.this._resolve(MySketch.this.??())): Int), {
      x = x.+(1);
      0
    }, if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
      true
    else
      scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())), if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
      true
    else
      scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))))))
  };
  def this(): angelic.simple.MySketch = {
    MySketch.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="empty_chain_13">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_7_11" to="empty_chain_13">
			<type xlink:href="#ClassDefTypeParamsChain"/>
		</edge>
		<node id="line_7_14">
			<type xlink:href="#Template"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>skalch.AngelicSketch with ScalaObject {
  def annoyance(x: Boolean): Boolean = x;
  def annoyance2(v1: Int, v2: Int, v3: Int, z: Int, x: Boolean, y: Boolean): Boolean = x;
  def main(): Unit = {
    var x: Int = 3;
    MySketch.this.synthAssert(MySketch.this.annoyance(MySketch.this.annoyance(MySketch.this.annoyance2(x, 3334, (scala.Int.unbox(MySketch.this._resolve(MySketch.this.??())): Int), {
      x = x.+(1);
      0
    }, if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
      true
    else
      scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())), if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
      true
    else
      scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))))))
  };
  def this(): angelic.simple.MySketch = {
    MySketch.super.this();
    ()
  }
}</string>
			</attr>
		</node>
		<node id="symbol_&lt;local MySketch&gt;_15">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;local MySketch&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.&lt;local MySketch&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;local MySketch&gt;_15" to="symbol_MySketch_12">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_7_14" to="symbol_&lt;local MySketch&gt;_15">
			<type xlink:href="#TemplateSymbol"/>
		</edge>
		<edge from="line_7_14" to="symbol_MySketch_12">
			<type xlink:href="#TemplateTypeSymbol"/>
		</edge>
		<node id="line_9_16">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>9</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>9</int>
			</attr>
			<attr name="scalaSource">
				<string>def annoyance(x: Boolean): Boolean = x</string>
			</attr>
		</node>
		<edge from="line_9_16" to="symbol_annoyance_17">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="line_9_18">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>34</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>34</int>
			</attr>
			<attr name="scalaSource">
				<string>x</string>
			</attr>
		</node>
		<edge from="line_9_18" to="symbol_x_19">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_9_18" to="symbol_Boolean_20">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_9_16" to="line_9_18">
			<type xlink:href="#FcnBody"/>
		</edge>
		<node id="line_9_22">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>9</int>
			</attr>
			<attr name="startCol">
				<int>19</int>
			</attr>
			<attr name="endLine">
				<int>9</int>
			</attr>
			<attr name="endCol">
				<int>19</int>
			</attr>
			<attr name="scalaSource">
				<string>val x: Boolean = _</string>
			</attr>
		</node>
		<edge from="line_9_22" to="symbol_x_19">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_23">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_9_22" to="line_0_23">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_9_16" to="line_9_22">
			<type xlink:href="#FcnDefParamsLast"/>
		</edge>
		<edge from="line_9_16" to="line_9_22">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_7_14" to="line_9_16">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<node id="line_10_24">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>9</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>9</int>
			</attr>
			<attr name="scalaSource">
				<string>def annoyance2(v1: Int, v2: Int, v3: Int, z: Int, x: Boolean, y: Boolean): Boolean = x</string>
			</attr>
		</node>
		<node id="symbol_annoyance2_25">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>annoyance2</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.annoyance2</string>
			</attr>
		</node>
		<edge from="symbol_annoyance2_25" to="symbol_MySketch_12">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_annoyance2_25" to="symbol_annoyance2_25">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="symbol_x_27">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>x</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.x</string>
			</attr>
		</node>
		<edge from="symbol_x_27" to="symbol_Boolean_20">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="line_10_26">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>87</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>87</int>
			</attr>
			<attr name="scalaSource">
				<string>x</string>
			</attr>
		</node>
		<edge from="line_10_26" to="symbol_Boolean_20">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_10_24" to="line_10_26">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_10_26" to="symbol_x_27">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<node id="line_10_41">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>59</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>59</int>
			</attr>
			<attr name="scalaSource">
				<string>val x: Boolean = _</string>
			</attr>
		</node>
		<node id="line_0_42">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_10_41" to="line_0_42">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<node id="line_10_38">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>50</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>50</int>
			</attr>
			<attr name="scalaSource">
				<string>val z: Int = _</string>
			</attr>
		</node>
		<node id="symbol_z_39">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>z</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.z</string>
			</attr>
		</node>
		<node id="symbol_Int_30">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Int</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Int</string>
			</attr>
		</node>
		<edge from="symbol_Int_30" to="symbol_Int_30">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_Int_30" to="symbol_scala_21">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_v1_29">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>v1</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.v1</string>
			</attr>
		</node>
		<edge from="symbol_v1_29" to="symbol_annoyance2_25">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_10_28">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>20</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>20</int>
			</attr>
			<attr name="scalaSource">
				<string>val v1: Int = _</string>
			</attr>
		</node>
		<node id="line_0_31">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_10_28" to="line_0_31">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_10_24" to="line_10_28">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<node id="line_10_32">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>30</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>30</int>
			</attr>
			<attr name="scalaSource">
				<string>val v2: Int = _</string>
			</attr>
		</node>
		<node id="symbol_v2_33">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>v2</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.v2</string>
			</attr>
		</node>
		<edge from="symbol_v2_33" to="symbol_Int_30">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_v2_33" to="symbol_annoyance2_25">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_10_32" to="symbol_v2_33">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_34">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_10_32" to="line_0_34">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<node id="line_10_35">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>40</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>40</int>
			</attr>
			<attr name="scalaSource">
				<string>val v3: Int = _</string>
			</attr>
		</node>
		<node id="symbol_v3_36">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>v3</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.v3</string>
			</attr>
		</node>
		<edge from="symbol_v3_36" to="symbol_Int_30">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_v3_36" to="symbol_annoyance2_25">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_10_35" to="symbol_v3_36">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_37">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_10_35" to="line_0_37">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_10_35" to="line_10_38">
			<type xlink:href="#FcnDefParamsNext"/>
		</edge>
		<edge from="line_10_32" to="line_10_35">
			<type xlink:href="#FcnDefParamsNext"/>
		</edge>
		<edge from="line_10_28" to="line_10_32">
			<type xlink:href="#FcnDefParamsNext"/>
		</edge>
		<edge from="line_10_28" to="symbol_v1_29">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<edge from="symbol_v1_29" to="symbol_Int_30">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_x_51">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>x</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.x</string>
			</attr>
		</node>
		<node id="symbol_main_47">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>main</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.main</string>
			</attr>
		</node>
		<edge from="symbol_main_47" to="symbol_MySketch_12">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_main_47" to="symbol_main_47">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_11_46">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>9</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>9</int>
			</attr>
			<attr name="scalaSource">
				<string>def main(): Unit = {
  var x: Int = 3;
  MySketch.this.synthAssert(MySketch.this.annoyance(MySketch.this.annoyance(MySketch.this.annoyance2(x, 3334, (scala.Int.unbox(MySketch.this._resolve(MySketch.this.??())): Int), {
    x = x.+(1);
    0
  }, if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
    true
  else
    scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())), if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
    true
  else
    scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))))))
}</string>
			</attr>
		</node>
		<node id="line_11_48">
			<type xlink:href="#Block"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>11</int>
			</attr>
			<attr name="startCol">
				<int>16</int>
			</attr>
			<attr name="endLine">
				<int>11</int>
			</attr>
			<attr name="endCol">
				<int>16</int>
			</attr>
			<attr name="scalaSource">
				<string>{
  var x: Int = 3;
  MySketch.this.synthAssert(MySketch.this.annoyance(MySketch.this.annoyance(MySketch.this.annoyance2(x, 3334, (scala.Int.unbox(MySketch.this._resolve(MySketch.this.??())): Int), {
    x = x.+(1);
    0
  }, if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
    true
  else
    scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())), if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
    true
  else
    scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))))))
}</string>
			</attr>
		</node>
		<node id="symbol_Unit_49">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Unit</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Unit</string>
			</attr>
		</node>
		<edge from="symbol_Unit_49" to="symbol_Unit_49">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_Unit_49" to="symbol_scala_21">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_13_53">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>13</int>
			</attr>
			<attr name="startCol">
				<int>20</int>
			</attr>
			<attr name="endLine">
				<int>13</int>
			</attr>
			<attr name="endCol">
				<int>20</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.synthAssert(MySketch.this.annoyance(MySketch.this.annoyance(MySketch.this.annoyance2(x, 3334, (scala.Int.unbox(MySketch.this._resolve(MySketch.this.??())): Int), {
  x = x.+(1);
  0
}, if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
  true
else
  scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())), if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
  true
else
  scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))))))</string>
			</attr>
		</node>
		<node id="symbol_synthAssert_54">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>synthAssert</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch.synthAssert</string>
			</attr>
		</node>
		<node id="symbol_AngelicSketch_55">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>AngelicSketch</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch</string>
			</attr>
		</node>
		<edge from="symbol_AngelicSketch_55" to="symbol_AngelicSketch_55">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_AngelicSketch_55" to="symbol_skalch_3">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol__resolve_66">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>_resolve</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch._resolve</string>
			</attr>
		</node>
		<edge from="symbol__resolve_66" to="symbol__resolve_66">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_16_65">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this._resolve(MySketch.this.??())</string>
			</attr>
		</node>
		<node id="symbol_Object_67">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Object</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang.Object</string>
			</attr>
		</node>
		<edge from="symbol_Object_67" to="symbol_Object_67">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_lang_68">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>lang</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang</string>
			</attr>
		</node>
		<edge from="symbol_lang_68" to="symbol_lang_68">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="symbol_java_69">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>java</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java</string>
			</attr>
		</node>
		<edge from="symbol_java_69" to="symbol_java_69">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_java_69" to="symbol_&lt;root&gt;_4">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_lang_68" to="symbol_java_69">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_String_148">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>String</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang.String</string>
			</attr>
		</node>
		<edge from="symbol_String_148" to="symbol_String_148">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="line_26_147">
			<type xlink:href="#StringConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>26</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>26</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>"hello"</string>
			</attr>
			<attr name="value">
				<string>hello</string>
			</attr>
		</node>
		<edge from="line_26_144" to="line_26_147">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_26_144" to="line_26_147">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<edge from="line_26_147" to="symbol_String_148">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="symbol_String_148" to="symbol_lang_68">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_Object_67" to="symbol_lang_68">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_18_90">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this._resolve(MySketch.this.!!())</string>
			</attr>
		</node>
		<node id="symbol__resolve_91">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>_resolve</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch._resolve</string>
			</attr>
		</node>
		<edge from="symbol__resolve_91" to="symbol_AngelicSketch_55">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol__resolve_91" to="symbol__resolve_91">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_18_102">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this._resolve(MySketch.this.!!())</string>
			</attr>
		</node>
		<edge from="line_18_102" to="symbol_Object_67">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_18_103">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.!!()</string>
			</attr>
		</node>
		<node id="symbol_$bang$bang_93">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$bang$bang</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch.$bang$bang</string>
			</attr>
		</node>
		<edge from="symbol_$bang$bang_93" to="symbol_AngelicSketch_55">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_$bang$bang_93" to="symbol_$bang$bang_93">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_18_92">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.!!()</string>
			</attr>
		</node>
		<node id="symbol_AngelicSketch$$bang$bang_94">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>AngelicSketch$$bang$bang</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch$$bang$bang</string>
			</attr>
		</node>
		<edge from="symbol_AngelicSketch$$bang$bang_94" to="symbol_AngelicSketch$$bang$bang_94">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_AngelicSketch$$bang$bang_94" to="symbol_skalch_3">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_18_103" to="symbol_AngelicSketch$$bang$bang_94">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_19_111">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.!!()</string>
			</attr>
		</node>
		<edge from="line_19_111" to="symbol_$bang$bang_93">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="empty_chain_112">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_19_111" to="empty_chain_112">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_19_113">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_19_113" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_19_113" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_19_111" to="line_19_113">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<node id="line_19_110">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this._resolve(MySketch.this.!!())</string>
			</attr>
		</node>
		<edge from="line_19_110" to="symbol__resolve_91">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_19_110" to="symbol_Object_67">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_19_110" to="line_19_111">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<node id="line_19_114">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_19_114" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_19_114" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_19_110" to="line_19_114">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<node id="line_19_109">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))</string>
			</attr>
		</node>
		<node id="symbol_unbox_88">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>unbox</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Boolean.unbox</string>
			</attr>
		</node>
		<node id="symbol_Boolean_89">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Boolean</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="symbol_Boolean_89" to="symbol_Boolean_89">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_Boolean_89" to="symbol_scala_21">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_Boolean_99">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Boolean</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="symbol_Boolean_99" to="symbol_scala_21">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_18_98">
			<type xlink:href="#QualifiedClassRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="line_18_98" to="symbol_Boolean_89">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<node id="line_18_87">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))</string>
			</attr>
		</node>
		<edge from="line_18_87" to="symbol_unbox_88">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_18_87" to="symbol_Boolean_20">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_18_87" to="line_18_90">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_18_87" to="line_18_90">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<node id="line_18_86">
			<type xlink:href="#If"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
  true
else
  scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))</string>
			</attr>
		</node>
		<edge from="line_18_86" to="symbol_Boolean_20">
			<type xlink:href="#IfTypeSymbol"/>
		</edge>
		<node id="line_18_100">
			<type xlink:href="#BooleanConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>21</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>21</int>
			</attr>
			<attr name="scalaSource">
				<string>true</string>
			</attr>
			<attr name="value">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="line_18_100" to="symbol_Boolean_20">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_18_86" to="line_18_100">
			<type xlink:href="#IfThen"/>
		</edge>
		<node id="line_18_101">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))</string>
			</attr>
		</node>
		<edge from="line_18_101" to="symbol_unbox_88">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_18_101" to="symbol_Boolean_20">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_18_101" to="line_18_102">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_18_101" to="line_18_102">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<node id="line_18_107">
			<type xlink:href="#QualifiedClassRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="line_18_107" to="symbol_Boolean_99">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_18_107" to="symbol_Boolean_89">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<edge from="line_18_101" to="line_18_107">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_18_86" to="line_18_101">
			<type xlink:href="#IfElse"/>
		</edge>
		<node id="line_17_78">
			<type xlink:href="#Block"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>17</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>17</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>{
  x = x.+(1);
  0
}</string>
			</attr>
		</node>
		<edge from="line_17_78" to="symbol_Int_30">
			<type xlink:href="#BlockTypeSymbol"/>
		</edge>
		<node id="line_17_79">
			<type xlink:href="#Assign"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>17</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>17</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>x = x.+(1)</string>
			</attr>
		</node>
		<edge from="line_17_79" to="symbol_Unit_49">
			<type xlink:href="#AssignTypeSymbol"/>
		</edge>
		<node id="line_17_80">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>17</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>17</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>x</string>
			</attr>
		</node>
		<edge from="line_17_80" to="symbol_x_51">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_17_80" to="symbol_Int_30">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_17_79" to="line_17_80">
			<type xlink:href="#AssignLhs"/>
		</edge>
		<node id="line_17_81">
			<type xlink:href="#FcnCallBinaryAdd"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>17</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>17</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>x.+(1)</string>
			</attr>
		</node>
		<node id="symbol_$plus_82">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$plus</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Int.$plus</string>
			</attr>
		</node>
		<edge from="symbol_$plus_82" to="symbol_Int_30">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_$plus_82" to="symbol_$plus_82">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_17_81" to="symbol_$plus_82">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_17_81" to="symbol_Int_30">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_17_83">
			<type xlink:href="#IntConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>17</int>
			</attr>
			<attr name="startCol">
				<int>20</int>
			</attr>
			<attr name="endLine">
				<int>17</int>
			</attr>
			<attr name="endCol">
				<int>20</int>
			</attr>
			<attr name="scalaSource">
				<string>1</string>
			</attr>
			<attr name="value">
				<int>1</int>
			</attr>
		</node>
		<edge from="line_17_83" to="symbol_Int_30">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_17_81" to="line_17_83">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<edge from="line_17_81" to="line_17_83">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_17_84">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>17</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>17</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>x</string>
			</attr>
		</node>
		<edge from="line_17_84" to="symbol_x_51">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_17_84" to="symbol_Int_30">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<edge from="line_17_81" to="line_17_84">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_17_79" to="line_17_81">
			<type xlink:href="#AssignRhs"/>
		</edge>
		<edge from="line_17_78" to="line_17_79">
			<type xlink:href="#BlockStmtLast"/>
		</edge>
		<edge from="line_17_78" to="line_17_79">
			<type xlink:href="#BlockStmtChain"/>
		</edge>
		<node id="line_17_85">
			<type xlink:href="#IntConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>17</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>17</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>0</string>
			</attr>
			<attr name="value">
				<int>0</int>
			</attr>
		</node>
		<edge from="line_17_85" to="symbol_Int_30">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_17_78" to="line_17_85">
			<type xlink:href="#BlockExpr"/>
		</edge>
		<node id="line_16_61">
			<type xlink:href="#Typed"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>16</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>16</int>
			</attr>
			<attr name="scalaSource">
				<string>(scala.Int.unbox(MySketch.this._resolve(MySketch.this.??())): Int)</string>
			</attr>
		</node>
		<edge from="line_16_61" to="symbol_Int_30">
			<type xlink:href="#TypedTypeSymbol"/>
		</edge>
		<node id="line_16_62">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Int.unbox(MySketch.this._resolve(MySketch.this.??()))</string>
			</attr>
		</node>
		<node id="symbol_unbox_63">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>unbox</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Int.unbox</string>
			</attr>
		</node>
		<node id="symbol_Int_64">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Int</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Int</string>
			</attr>
		</node>
		<edge from="symbol_Int_64" to="symbol_Int_64">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_Int_64" to="symbol_scala_21">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_Int_77">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Int</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Int</string>
			</attr>
		</node>
		<edge from="symbol_Int_77" to="symbol_scala_21">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="line_16_76">
			<type xlink:href="#QualifiedClassRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Int</string>
			</attr>
		</node>
		<edge from="line_16_76" to="symbol_Int_64">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<edge from="line_16_62" to="line_16_76">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_16_76" to="symbol_Int_77">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="symbol_Int_77" to="symbol_Int_64">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_unbox_63" to="symbol_Int_64">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_unbox_63" to="symbol_unbox_63">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_16_62" to="symbol_unbox_63">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_16_62" to="symbol_Int_30">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_16_62" to="line_16_65">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_16_62" to="line_16_65">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<edge from="line_16_61" to="line_16_62">
			<type xlink:href="#TypedExpression"/>
		</edge>
		<node id="line_15_60">
			<type xlink:href="#IntConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>15</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>15</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>3334</string>
			</attr>
			<attr name="value">
				<int>3334</int>
			</attr>
		</node>
		<edge from="line_15_60" to="symbol_Int_30">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<node id="line_14_59">
			<type xlink:href="#VarRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>14</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>14</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>x</string>
			</attr>
		</node>
		<edge from="line_14_59" to="symbol_x_51">
			<type xlink:href="#VarRefSymbol"/>
		</edge>
		<edge from="line_14_59" to="symbol_Int_30">
			<type xlink:href="#VarRefTypeSymbol"/>
		</edge>
		<node id="line_13_58">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>13</int>
			</attr>
			<attr name="startCol">
				<int>51</int>
			</attr>
			<attr name="endLine">
				<int>13</int>
			</attr>
			<attr name="endCol">
				<int>51</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.annoyance2(x, 3334, (scala.Int.unbox(MySketch.this._resolve(MySketch.this.??())): Int), {
  x = x.+(1);
  0
}, if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
  true
else
  scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())), if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
  true
else
  scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))</string>
			</attr>
		</node>
		<edge from="line_13_58" to="symbol_annoyance2_25">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_13_58" to="symbol_Boolean_20">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_19_108">
			<type xlink:href="#If"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
  true
else
  scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))</string>
			</attr>
		</node>
		<edge from="line_19_108" to="symbol_Boolean_20">
			<type xlink:href="#IfTypeSymbol"/>
		</edge>
		<edge from="line_19_108" to="line_19_109">
			<type xlink:href="#IfCond"/>
		</edge>
		<node id="line_19_116">
			<type xlink:href="#BooleanConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>21</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>21</int>
			</attr>
			<attr name="scalaSource">
				<string>true</string>
			</attr>
			<attr name="value">
				<bool>true</bool>
			</attr>
		</node>
		<edge from="line_19_116" to="symbol_Boolean_20">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_19_108" to="line_19_116">
			<type xlink:href="#IfThen"/>
		</edge>
		<node id="line_19_117">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))</string>
			</attr>
		</node>
		<edge from="line_19_117" to="symbol_unbox_88">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_19_117" to="symbol_Boolean_20">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_19_118">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this._resolve(MySketch.this.!!())</string>
			</attr>
		</node>
		<edge from="line_19_118" to="symbol__resolve_91">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_19_118" to="symbol_Object_67">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_19_119">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.!!()</string>
			</attr>
		</node>
		<edge from="line_19_119" to="symbol_$bang$bang_93">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_19_119" to="symbol_AngelicSketch$$bang$bang_94">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_120">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_19_119" to="empty_chain_120">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_19_121">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_19_121" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_19_121" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_19_119" to="line_19_121">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_19_118" to="line_19_119">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<edge from="line_19_118" to="line_19_119">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_19_122">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_19_122" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_19_122" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_19_118" to="line_19_122">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_19_117" to="line_19_118">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<edge from="line_19_117" to="line_19_118">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_19_123">
			<type xlink:href="#QualifiedClassRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="line_19_123" to="symbol_Boolean_99">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="line_19_123" to="symbol_Boolean_89">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<edge from="line_19_117" to="line_19_123">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_19_108" to="line_19_117">
			<type xlink:href="#IfElse"/>
		</edge>
		<edge from="line_18_86" to="line_19_108">
			<type xlink:href="#FcnArgNext"/>
		</edge>
		<edge from="line_13_58" to="line_19_108">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<node id="line_13_124">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>13</int>
			</attr>
			<attr name="startCol">
				<int>41</int>
			</attr>
			<attr name="endLine">
				<int>13</int>
			</attr>
			<attr name="endCol">
				<int>41</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_13_124" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_13_124" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_13_58" to="line_13_124">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<node id="line_13_57">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>13</int>
			</attr>
			<attr name="startCol">
				<int>40</int>
			</attr>
			<attr name="endLine">
				<int>13</int>
			</attr>
			<attr name="endCol">
				<int>40</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.annoyance(MySketch.this.annoyance2(x, 3334, (scala.Int.unbox(MySketch.this._resolve(MySketch.this.??())): Int), {
  x = x.+(1);
  0
}, if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
  true
else
  scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())), if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
  true
else
  scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!()))))</string>
			</attr>
		</node>
		<edge from="line_13_57" to="symbol_annoyance_17">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_13_57" to="symbol_Boolean_20">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_13_57" to="line_13_58">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<node id="line_13_125">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>13</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>13</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_13_125" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_13_125" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_13_57" to="line_13_125">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<node id="line_13_56">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>13</int>
			</attr>
			<attr name="startCol">
				<int>30</int>
			</attr>
			<attr name="endLine">
				<int>13</int>
			</attr>
			<attr name="endCol">
				<int>30</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.annoyance(MySketch.this.annoyance(MySketch.this.annoyance2(x, 3334, (scala.Int.unbox(MySketch.this._resolve(MySketch.this.??())): Int), {
  x = x.+(1);
  0
}, if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
  true
else
  scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())), if (scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))
  true
else
  scala.Boolean.unbox(MySketch.this._resolve(MySketch.this.!!())))))</string>
			</attr>
		</node>
		<edge from="line_13_56" to="symbol_annoyance_17">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_13_56" to="symbol_Boolean_20">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_13_56" to="line_13_57">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<node id="line_13_126">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>13</int>
			</attr>
			<attr name="startCol">
				<int>21</int>
			</attr>
			<attr name="endLine">
				<int>13</int>
			</attr>
			<attr name="endCol">
				<int>21</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_13_126" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_13_126" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_13_56" to="line_13_126">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_13_53" to="line_13_56">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_13_53" to="line_13_56">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<edge from="line_13_56" to="line_13_57">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_13_57" to="line_13_58">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_13_58" to="line_14_59">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_14_59" to="line_15_60">
			<type xlink:href="#FcnArgNext"/>
		</edge>
		<edge from="line_15_60" to="line_16_61">
			<type xlink:href="#FcnArgNext"/>
		</edge>
		<edge from="line_16_61" to="line_17_78">
			<type xlink:href="#FcnArgNext"/>
		</edge>
		<edge from="line_17_78" to="line_18_86">
			<type xlink:href="#FcnArgNext"/>
		</edge>
		<edge from="line_18_86" to="line_18_87">
			<type xlink:href="#IfCond"/>
		</edge>
		<edge from="line_18_87" to="line_18_98">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_18_98" to="symbol_Boolean_99">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<node id="line_19_115">
			<type xlink:href="#QualifiedClassRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>19</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>19</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.Boolean</string>
			</attr>
		</node>
		<edge from="line_19_115" to="symbol_Boolean_89">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<edge from="line_19_109" to="line_19_115">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_19_115" to="symbol_Boolean_99">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="symbol_Boolean_99" to="symbol_Boolean_89">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_unbox_88" to="symbol_Boolean_89">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_unbox_88" to="symbol_unbox_88">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_19_109" to="symbol_unbox_88">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_19_109" to="symbol_Boolean_20">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_19_109" to="line_19_110">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<edge from="line_19_109" to="line_19_110">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_19_110" to="line_19_111">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_19_111" to="symbol_AngelicSketch$$bang$bang_94">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_18_92" to="symbol_AngelicSketch$$bang$bang_94">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_95">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_18_92" to="empty_chain_95">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_18_96">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_18_96" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_18_96" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_18_92" to="line_18_96">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_18_90" to="line_18_92">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<edge from="line_18_90" to="line_18_92">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<edge from="line_18_92" to="symbol_$bang$bang_93">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_18_103" to="symbol_$bang$bang_93">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="empty_chain_104">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_18_103" to="empty_chain_104">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_18_105">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_18_105" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_18_105" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_18_103" to="line_18_105">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_18_102" to="line_18_103">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<edge from="line_18_102" to="line_18_103">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_18_106">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>31</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>31</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_18_106" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_18_106" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_18_102" to="line_18_106">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_18_102" to="symbol__resolve_91">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_18_90" to="symbol__resolve_91">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="line_18_97">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>18</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>18</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_18_97" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_18_97" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_18_90" to="line_18_97">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_18_90" to="symbol_Object_67">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="symbol_&lt;init&gt;_156">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>java.lang.Object.&lt;init&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;init&gt;_156" to="symbol_&lt;init&gt;_156">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_24_155">
			<type xlink:href="#FcnSuperCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>24</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>24</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>IrrelevantClass.super.this()</string>
			</attr>
		</node>
		<edge from="line_24_155" to="symbol_Object_67">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_157">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_24_155" to="empty_chain_157">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_24_154">
			<type xlink:href="#Block"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>24</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>24</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>{
  IrrelevantClass.super.this();
  ()
}</string>
			</attr>
		</node>
		<edge from="line_24_154" to="symbol_Unit_49">
			<type xlink:href="#BlockTypeSymbol"/>
		</edge>
		<edge from="line_24_154" to="line_24_155">
			<type xlink:href="#BlockStmtLast"/>
		</edge>
		<node id="line_24_158">
			<type xlink:href="#UnitConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>24</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>24</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>()</string>
			</attr>
		</node>
		<edge from="line_24_158" to="symbol_Unit_49">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_24_154" to="line_24_158">
			<type xlink:href="#BlockExpr"/>
		</edge>
		<node id="line_24_152">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>24</int>
			</attr>
			<attr name="startCol">
				<int>23</int>
			</attr>
			<attr name="endLine">
				<int>24</int>
			</attr>
			<attr name="endCol">
				<int>23</int>
			</attr>
			<attr name="scalaSource">
				<string>def this(): angelic.simple.IrrelevantClass = {
  IrrelevantClass.super.this();
  ()
}</string>
			</attr>
		</node>
		<node id="symbol_&lt;init&gt;_153">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.IrrelevantClass.&lt;init&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;init&gt;_153" to="symbol_IrrelevantClass_138">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_153" to="symbol_&lt;init&gt;_153">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_24_152" to="symbol_&lt;init&gt;_153">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="empty_chain_159">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_24_152" to="empty_chain_159">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_24_140" to="line_24_152">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_24_152" to="line_24_154">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_24_154" to="line_24_155">
			<type xlink:href="#BlockStmtChain"/>
		</edge>
		<edge from="line_24_155" to="symbol_&lt;init&gt;_156">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_156" to="symbol_Object_67">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_16_65" to="symbol_Object_67">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="line_16_70">
			<type xlink:href="#FcnCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this.??()</string>
			</attr>
		</node>
		<node id="symbol_$qmark$qmark_71">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>$qmark$qmark</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch.$qmark$qmark</string>
			</attr>
		</node>
		<edge from="symbol_$qmark$qmark_71" to="symbol_AngelicSketch_55">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_$qmark$qmark_71" to="symbol_$qmark$qmark_71">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_16_70" to="symbol_$qmark$qmark_71">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="symbol_AngelicSketch$$qmark$qmark_72">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>AngelicSketch$$qmark$qmark</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch$$qmark$qmark</string>
			</attr>
		</node>
		<edge from="symbol_AngelicSketch$$qmark$qmark_72" to="symbol_AngelicSketch$$qmark$qmark_72">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_AngelicSketch$$qmark$qmark_72" to="symbol_skalch_3">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_16_70" to="symbol_AngelicSketch$$qmark$qmark_72">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_73">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_16_70" to="empty_chain_73">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_16_74">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_16_74" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_16_74" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_16_70" to="line_16_74">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_16_65" to="line_16_70">
			<type xlink:href="#FcnArgLast"/>
		</edge>
		<edge from="line_16_65" to="line_16_70">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_16_75">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>16</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>16</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_16_75" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_16_75" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_16_65" to="line_16_75">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_16_65" to="symbol__resolve_66">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="symbol__resolve_66" to="symbol_AngelicSketch_55">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_&lt;init&gt;_133">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>skalch.AngelicSketch.&lt;init&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;init&gt;_133" to="symbol_&lt;init&gt;_133">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<node id="line_7_132">
			<type xlink:href="#FcnSuperCall"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.super.this()</string>
			</attr>
		</node>
		<edge from="line_7_132" to="symbol_AngelicSketch_55">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<node id="empty_chain_134">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_7_132" to="empty_chain_134">
			<type xlink:href="#FcnArgChain"/>
		</edge>
		<node id="line_7_131">
			<type xlink:href="#Block"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>{
  MySketch.super.this();
  ()
}</string>
			</attr>
		</node>
		<edge from="line_7_131" to="symbol_Unit_49">
			<type xlink:href="#BlockTypeSymbol"/>
		</edge>
		<edge from="line_7_131" to="line_7_132">
			<type xlink:href="#BlockStmtLast"/>
		</edge>
		<node id="line_7_135">
			<type xlink:href="#UnitConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>()</string>
			</attr>
		</node>
		<edge from="line_7_135" to="symbol_Unit_49">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_7_131" to="line_7_135">
			<type xlink:href="#BlockExpr"/>
		</edge>
		<node id="line_7_129">
			<type xlink:href="#FcnDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>7</int>
			</attr>
			<attr name="startCol">
				<int>15</int>
			</attr>
			<attr name="endLine">
				<int>7</int>
			</attr>
			<attr name="endCol">
				<int>15</int>
			</attr>
			<attr name="scalaSource">
				<string>def this(): angelic.simple.MySketch = {
  MySketch.super.this();
  ()
}</string>
			</attr>
		</node>
		<node id="symbol_&lt;init&gt;_130">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>&lt;init&gt;</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.&lt;init&gt;</string>
			</attr>
		</node>
		<edge from="symbol_&lt;init&gt;_130" to="symbol_MySketch_12">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_130" to="symbol_&lt;init&gt;_130">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_7_129" to="symbol_&lt;init&gt;_130">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<node id="empty_chain_136">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_7_129" to="empty_chain_136">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_7_14" to="line_7_129">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_7_129" to="line_7_131">
			<type xlink:href="#FcnBody"/>
		</edge>
		<edge from="line_7_131" to="line_7_132">
			<type xlink:href="#BlockStmtChain"/>
		</edge>
		<edge from="line_7_132" to="symbol_&lt;init&gt;_133">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="symbol_&lt;init&gt;_133" to="symbol_AngelicSketch_55">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_synthAssert_54" to="symbol_AngelicSketch_55">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_synthAssert_54" to="symbol_synthAssert_54">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_13_53" to="symbol_synthAssert_54">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<node id="line_13_127">
			<type xlink:href="#This"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>13</int>
			</attr>
			<attr name="startCol">
				<int>9</int>
			</attr>
			<attr name="endLine">
				<int>13</int>
			</attr>
			<attr name="endCol">
				<int>9</int>
			</attr>
			<attr name="scalaSource">
				<string>MySketch.this</string>
			</attr>
		</node>
		<edge from="line_13_127" to="symbol_MySketch_12">
			<type xlink:href="#ThisSymbol"/>
		</edge>
		<edge from="line_13_127" to="symbol_MySketch_12">
			<type xlink:href="#ThisTypeSymbol"/>
		</edge>
		<edge from="line_13_53" to="line_13_127">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_11_48" to="line_13_53">
			<type xlink:href="#BlockExpr"/>
		</edge>
		<edge from="line_13_53" to="symbol_Unit_49">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_26_144" to="symbol_Unit_49">
			<type xlink:href="#FcnCallTypeSymbol"/>
		</edge>
		<edge from="line_11_48" to="symbol_Unit_49">
			<type xlink:href="#BlockTypeSymbol"/>
		</edge>
		<node id="line_12_50">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>13</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>13</int>
			</attr>
			<attr name="scalaSource">
				<string>var x: Int = 3</string>
			</attr>
		</node>
		<edge from="line_12_50" to="symbol_x_51">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_12_52">
			<type xlink:href="#IntConstant"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>12</int>
			</attr>
			<attr name="startCol">
				<int>17</int>
			</attr>
			<attr name="endLine">
				<int>12</int>
			</attr>
			<attr name="endCol">
				<int>17</int>
			</attr>
			<attr name="scalaSource">
				<string>3</string>
			</attr>
			<attr name="value">
				<int>3</int>
			</attr>
		</node>
		<edge from="line_12_52" to="symbol_Int_30">
			<type xlink:href="#LiteralTypeSymbol"/>
		</edge>
		<edge from="line_12_50" to="line_12_52">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_11_48" to="line_12_50">
			<type xlink:href="#BlockStmtLast"/>
		</edge>
		<edge from="line_11_48" to="line_12_50">
			<type xlink:href="#BlockStmtChain"/>
		</edge>
		<edge from="line_11_46" to="line_11_48">
			<type xlink:href="#FcnBody"/>
		</edge>
		<node id="empty_chain_128">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_11_46" to="empty_chain_128">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_7_14" to="line_11_46">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_11_46" to="symbol_main_47">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<edge from="symbol_x_51" to="symbol_main_47">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_x_51" to="symbol_Int_30">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_z_39" to="symbol_Int_30">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_z_39" to="symbol_annoyance2_25">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_10_38" to="symbol_z_39">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_40">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_10_38" to="line_0_40">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_10_38" to="line_10_41">
			<type xlink:href="#FcnDefParamsNext"/>
		</edge>
		<node id="line_10_43">
			<type xlink:href="#ValDef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>10</int>
			</attr>
			<attr name="startCol">
				<int>72</int>
			</attr>
			<attr name="endLine">
				<int>10</int>
			</attr>
			<attr name="endCol">
				<int>72</int>
			</attr>
			<attr name="scalaSource">
				<string>val y: Boolean = _</string>
			</attr>
		</node>
		<node id="symbol_y_44">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>y</string>
			</attr>
			<attr name="fullSymbolName">
				<string>angelic.simple.MySketch.y</string>
			</attr>
		</node>
		<edge from="symbol_y_44" to="symbol_Boolean_20">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_y_44" to="symbol_annoyance2_25">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_10_43" to="symbol_y_44">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<node id="line_0_45">
			<type xlink:href="#EmptyTree"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>0</int>
			</attr>
			<attr name="startCol">
				<int>0</int>
			</attr>
			<attr name="endLine">
				<int>0</int>
			</attr>
			<attr name="endCol">
				<int>0</int>
			</attr>
			<attr name="scalaSource">
				<string>&lt;empty&gt;</string>
			</attr>
		</node>
		<edge from="line_10_43" to="line_0_45">
			<type xlink:href="#ValDefRhs"/>
		</edge>
		<edge from="line_10_24" to="line_10_43">
			<type xlink:href="#FcnDefParamsLast"/>
		</edge>
		<edge from="line_10_41" to="line_10_43">
			<type xlink:href="#FcnDefParamsNext"/>
		</edge>
		<edge from="line_10_41" to="symbol_x_27">
			<type xlink:href="#ValDefSymbol"/>
		</edge>
		<edge from="symbol_x_27" to="symbol_annoyance2_25">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="line_10_24" to="symbol_annoyance2_25">
			<type xlink:href="#FcnDefSymbol"/>
		</edge>
		<edge from="line_7_14" to="line_10_24">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_7_11" to="line_7_14">
			<type xlink:href="#ClassDefImpl"/>
		</edge>
		<edge from="line_1_7" to="line_7_11">
			<type xlink:href="#PackageDefElement"/>
		</edge>
		<edge from="line_7_11" to="symbol_MySketch_12">
			<type xlink:href="#ClassDefSymbol"/>
		</edge>
		<edge from="symbol_annoyance_17" to="symbol_MySketch_12">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_annoyance_17" to="symbol_annoyance_17">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="symbol_x_19" to="symbol_annoyance_17">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_x_19" to="symbol_Boolean_20">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="symbol_Boolean_20" to="symbol_scala_21">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<node id="symbol_Predef_150">
			<type xlink:href="#Symbol"/>
			<attr name="symbolName">
				<string>Predef</string>
			</attr>
			<attr name="fullSymbolName">
				<string>scala.Predef</string>
			</attr>
		</node>
		<edge from="symbol_Predef_150" to="symbol_Predef_146">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<node id="line_26_149">
			<type xlink:href="#QualifiedClassRef"/>
			<attr name="sourceFile">
				<string>/home/gatoatigrado/sandbox/skalch/base/src/test/scala/angelic/simple/SugaredTest.scala</string>
			</attr>
			<attr name="startLine">
				<int>26</int>
			</attr>
			<attr name="startCol">
				<int>9</int>
			</attr>
			<attr name="endLine">
				<int>26</int>
			</attr>
			<attr name="endCol">
				<int>9</int>
			</attr>
			<attr name="scalaSource">
				<string>scala.this.Predef</string>
			</attr>
		</node>
		<edge from="line_26_149" to="symbol_Predef_146">
			<type xlink:href="#ClassRefTypeSymbol"/>
		</edge>
		<edge from="line_26_144" to="line_26_149">
			<type xlink:href="#FcnTarget"/>
		</edge>
		<edge from="line_26_149" to="symbol_Predef_150">
			<type xlink:href="#ClassRefSymbol"/>
		</edge>
		<edge from="symbol_Predef_150" to="symbol_scala_21">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_Predef_146" to="symbol_scala_21">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_println_145" to="symbol_Predef_146">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_println_145" to="symbol_println_145">
			<type xlink:href="#ClsMethod"/>
		</edge>
		<edge from="line_26_144" to="symbol_println_145">
			<type xlink:href="#FcnCallSymbol"/>
		</edge>
		<edge from="line_25_142" to="line_26_144">
			<type xlink:href="#FcnBody"/>
		</edge>
		<node id="empty_chain_151">
			<type xlink:href="#EmptyChain"/>
		</node>
		<edge from="line_25_142" to="empty_chain_151">
			<type xlink:href="#FcnDefParamsChain"/>
		</edge>
		<edge from="line_24_140" to="line_25_142">
			<type xlink:href="#TemplateElement"/>
		</edge>
		<edge from="line_24_137" to="line_24_140">
			<type xlink:href="#ClassDefImpl"/>
		</edge>
		<edge from="line_1_7" to="line_24_137">
			<type xlink:href="#PackageDefElement"/>
		</edge>
		<edge from="line_24_137" to="symbol_IrrelevantClass_138">
			<type xlink:href="#ClassDefSymbol"/>
		</edge>
		<edge from="symbol_IrrelevantClass_138" to="annot_1">
			<type xlink:href="#SymbolAnnotation"/>
		</edge>
		<edge from="annot_1" to="symbol_SkalchIgnoreClass_2">
			<type xlink:href="#AnnotationSymbol"/>
		</edge>
		<edge from="symbol_SkalchIgnoreClass_2" to="symbol_skalch_3">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_skalch_3" to="symbol_&lt;root&gt;_4">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_angelic_10" to="symbol_&lt;root&gt;_4">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_simple_8" to="symbol_angelic_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_simple_9" to="symbol_angelic_10">
			<type xlink:href="#SymbolOwner"/>
		</edge>
		<edge from="symbol_simple_8" to="symbol_simple_9">
			<type xlink:href="#TypeSymbol"/>
		</edge>
		<edge from="line_1_7" to="symbol_simple_8">
			<type xlink:href="#PackageDefSymbol"/>
		</edge>
	</graph>
</gxl>